/*!
 * DJ Mountainous - Dj Mountainous v1.1.1 (djmountainous.com)
 * Copyright 2016-2016 Corey Sanford
 */
"use strict";function collapseNavbar(){$(".navbar").offset().top>$("#waves").offset().top-150?$(".navbar-fixed-top").addClass("top-nav-collapse"):$(".navbar-fixed-top").removeClass("top-nav-collapse")}$(function(){var t=function(t){this.$audioPlayer=t,this.$playPauseBtn=this.$audioPlayer.find(".play-pause").eq(0),this.$track=this.$audioPlayer.find("audio").eq(0),this.track=this.$track.get(0),this.$progressBar=this.$audioPlayer.find(".progress-bar").eq(0),this.$buffer=this.$progressBar.find(".buffer").eq(0),this.$played=this.$progressBar.find(".played").eq(0),this.$currentTime=this.$audioPlayer.find(".current-time").eq(0),this.$mixLength=this.$audioPlayer.find(".mix-length").eq(0),this.$divider=this.$audioPlayer.find(".divider").eq(0),this.trackRefreshTimer=null};t.prototype.pauseAllOthers=function(){$(".audio-player").not(this.$audioPlayer).each(function(){var a=new t($(this));a.pauseTrack()})},t.prototype.isPaused=function(){return this.track.paused},t.prototype.pauseTrack=function(t){this.track.pause(),this.$audioPlayer.removeClass("playing"),this.$progressBar.removeClass("expanded")},t.prototype.playTrack=function(t){ga("send","event","Mix","play",this.$audioPlayer.attr("id"),this.$audioPlayer.data("rating")),this.pauseAllOthers(),this.track.play(),this.$audioPlayer.addClass("playing"),this.$progressBar.addClass("expanded"),this.startInterval(),this.$currentTime.text(this.currentTimeString()),this.$divider.show(),this.$mixLength.text(this.durationString())},t.prototype.startInterval=function(){this.trackRefreshTimer=setInterval(this.tick.bind(this),100)},t.prototype.clearInterval=function(){clearInterval(this.trackRefreshTimer)},t.prototype.tick=function(){this.$currentTime.text(this.currentTimeString()),this.updateProgressBar()},t.prototype.updateProgressBar=function(){var t=this.track.currentTime/this.track.duration*100;this.$played.css("width",t+"%")},t.prototype.currentTimeString=function(){return this.timeString(this.track.currentTime)},t.prototype.durationString=function(){return this.timeString(this.track.duration)},t.prototype.timeString=function(t){if(isNaN(t)){if(isNaN(this.track.duration))return"";this.track.duration}var a="0"+Math.round(t%60);return a=a.substr(a.length-2),Math.round(t/60)+":"+a},t.prototype.togglePlayPause=function(){this.isPaused()?this.playTrack():this.pauseTrack()},t.prototype.seek=function(t){var a=t.offsetX/$(t.target).width();this.track.currentTime=a*this.track.duration,this.updateProgressBar()},$("body").on("click",".play-pause",function(){var a=new t($(this).closest(".audio-player").eq(0));a.togglePlayPause()}),$("body").on("click",".progress-bar",function(a){var i=new t($(this).closest(".audio-player").eq(0));i.seek(a)}),$("body").on("click",".download",function(t){ga("send","event","Mix","download",$(this).closest(".audio-player").attr("id"),$(this).closest(".audio-player").data("rating"))})}),$(window).scroll(collapseNavbar),$(document).ready(collapseNavbar),$(function(){$("a.page-scroll").bind("click",function(t){$(this);t.preventDefault()})}),$(".navbar-collapse ul li a").click(function(){"dropdown-toggle active"!=$(this).attr("class")&&"dropdown-toggle"!=$(this).attr("class")&&$(".navbar-toggle:visible").click()}),$(function(){function t(t){$(".v-descriptions > p").not('.v-descriptions > p[data-rating="'+t+'"]').hide(),$(".bottom-bar > div .rating-block").not('.bottom-bar > div .rating-block[data-rating="'+t+'"]').css("opacity",i).removeClass("active"),$('.bottom-bar > div .rating-block[data-rating="'+t+'"]').css("opacity",1).addClass("active"),$('.v-descriptions > p[data-rating="'+t+'"]').show()}var a=480,i="0.4",e="0.5",r=$(".bottom-bar .rating-block"),s=r.length;r.eq(0).height();0!==s&&(setInterval(function(){var t=Math.floor(Math.random()*s)+1;r.not(".active").css("opacity",i);for(var a=0;a<t;a++){var n=Math.floor(Math.random()*s)+1;r.eq(n).hasClass("active")||r.eq(n).css("opacity",e)}},a),$(".bottom-bar > div").on("click",function(){var a=$(this).find(".rating-block").data("rating");t(a)}))}),$(function(){window.location.search.replace("?","");$("*").on("click",function(){$(".mix").css("opacity",1)}),$("#mixes").on("click",".mix__details .rating",function(){$('.rating-block[data-rating="'+$(this).data("rating")+'"]').closest("div").trigger("hover"),$('.rating-block[data-rating="'+$(this).data("rating")+'"]').closest("div").trigger("click"),$("html, body").scrollTop($(".bottom-bar").offset().top-130)})}),$(function(){function t(t,a){var i=MyApp.templates.mixes(t);$("#mixes-tmpl-"+a).html(i)}var a={mixes:[{title:"The Eiger",genres:"Tech House",date:"Sept 2016",slug:"va-tech-house",rating:3},{title:"Garibaldi",genres:"Deep House",date:"June 2016",slug:"va-deep-house-v2",rating:2}]},i={mixes:[{title:"Blueprint 19th Warmup",genres:"Rezz Griz Grime W.S.N DFrancis",date:"October 2016",slug:"blueprint-19-warmup",rating:9},{title:"Live @ BirthRave 2016",genres:"Bass Funk, Trap, Dub",date:"Sept 24, 2016",slug:"live-birthrave-2016-bass-funk-dub",rating:8},{title:"Black Tusk",genres:"Trap & Dubstep",date:"August 2016",slug:"va-dubtrap",rating:9},{title:"Seven Lions warmup",genres:"Dreamstep",date:"October 2016",slug:"seven-lions-warm-up-mix",rating:7}]};t(i,"intense"),t(a,"calm")});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFsbC1taW4uanMiLCJncmF5c2NhbGUuanMiLCJhdWRpby1wbGF5ZXIuanMiLCJob21lcGFnZS1hbmltYXRpb25zLmpzIiwic2l0ZS5qcyJdLCJuYW1lcyI6WyJjb2xsYXBzZU5hdmJhciIsIiQiLCJvZmZzZXQiLCJ0b3AiLCJhZGRDbGFzcyIsInJlbW92ZUNsYXNzIiwiYXVkaW9QbGF5ZXIiLCIkYXVkaW9QbGF5ZXIiLCJ0aGlzIiwiJHBsYXlQYXVzZUJ0biIsImZpbmQiLCJlcSIsIiR0cmFjayIsInRyYWNrIiwiZ2V0IiwiJHByb2dyZXNzQmFyIiwiJGJ1ZmZlciIsIiRwbGF5ZWQiLCIkY3VycmVudFRpbWUiLCIkbWl4TGVuZ3RoIiwiJGRpdmlkZXIiLCJ0cmFja1JlZnJlc2hUaW1lciIsInByb3RvdHlwZSIsInBhdXNlQWxsT3RoZXJzIiwibm90IiwiZWFjaCIsInBsYXlyIiwicGF1c2VUcmFjayIsImlzUGF1c2VkIiwicGF1c2VkIiwicGF1c2UiLCJwbGF5VHJhY2siLCJnYSIsImF0dHIiLCJkYXRhIiwicGxheSIsInN0YXJ0SW50ZXJ2YWwiLCJ0ZXh0IiwiY3VycmVudFRpbWVTdHJpbmciLCJzaG93IiwiZHVyYXRpb25TdHJpbmciLCJzZXRJbnRlcnZhbCIsInRpY2siLCJiaW5kIiwiY2xlYXJJbnRlcnZhbCIsInVwZGF0ZVByb2dyZXNzQmFyIiwicGxheVBlcmNlbnRhZ2UiLCJjdXJyZW50VGltZSIsImR1cmF0aW9uIiwiY3NzIiwidGltZVN0cmluZyIsInRpbWUiLCJpc05hTiIsInNlY29uZHMiLCJNYXRoIiwicm91bmQiLCJzdWJzdHIiLCJsZW5ndGgiLCJ0b2dnbGVQbGF5UGF1c2UiLCJzZWVrIiwiZXZlbnQiLCJvZmZzZXRYIiwidGFyZ2V0Iiwid2lkdGgiLCJvbiIsInBsYXllciIsImNsb3Nlc3QiLCJ3aW5kb3ciLCJzY3JvbGwiLCJkb2N1bWVudCIsInJlYWR5IiwicHJldmVudERlZmF1bHQiLCJjbGljayIsInNob3dBbmRIaWdobGlnaHRSYXRpbmciLCJyYXRpbmciLCJoaWRlIiwiREVGQVVMVF9PUEFDSVRZIiwiQU5JTUFUSU9OX1BFUklPRCIsIklOQ1JFQVNFRF9PUEFDSVRZIiwiJHJhdGluZ19ibG9ja3MiLCJudW1fcmF0aW5ncyIsImhlaWdodCIsImJsb2Nrc190b19ibGFuayIsImZsb29yIiwicmFuZG9tIiwiaSIsInJhbmRfYmxvY2tfaW5kZXgiLCJoYXNDbGFzcyIsImxvY2F0aW9uIiwic2VhcmNoIiwicmVwbGFjZSIsInRyaWdnZXIiLCJzY3JvbGxUb3AiLCJpbmplY3RUZW1wbGF0ZXMiLCJ0eXBlIiwiaHRtbCIsIk15QXBwIiwidGVtcGxhdGVzIiwibWl4ZXMiLCJjYWxtX21peGVzIiwidGl0bGUiLCJnZW5yZXMiLCJkYXRlIiwic2x1ZyIsImludGVuc2VfbWl4ZXMiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxZQ09BLFNBQVNBLGtCQUNEQyxFQUFFLFdBQVdDLFNBQVNDLElBQU1GLEVBQUUsVUFBVUMsU0FBU0MsSUFBTSxJQUN2REYsRUFBRSxxQkFBcUJHLFNBQVMsb0JBRWhDSCxFQUFFLHFCQUFxQkksWUFBWSxvQkNQM0NKLEVBQUUsV0FFQSxHQUFJSyxHQUFjLFNBQVNDLEdBRXpCQyxLQUFLRCxhQUFlQSxFQUVwQkMsS0FBS0MsY0FBZ0JELEtBQUtELGFBQWFHLEtBQUssZUFBZUMsR0FBRyxHQUM5REgsS0FBS0ksT0FBU0osS0FBS0QsYUFBYUcsS0FBSyxTQUFTQyxHQUFHLEdBQ2pESCxLQUFLSyxNQUFRTCxLQUFLSSxPQUFPRSxJQUFJLEdBRTdCTixLQUFLTyxhQUFlUCxLQUFLRCxhQUFhRyxLQUFLLGlCQUFpQkMsR0FBRyxHQUMvREgsS0FBS1EsUUFBZVIsS0FBS08sYUFBYUwsS0FBSyxXQUFXQyxHQUFHLEdBQ3pESCxLQUFLUyxRQUFlVCxLQUFLTyxhQUFhTCxLQUFLLFdBQVdDLEdBQUcsR0FFekRILEtBQUtVLGFBQWVWLEtBQUtELGFBQWFHLEtBQUssaUJBQWlCQyxHQUFHLEdBQy9ESCxLQUFLVyxXQUFlWCxLQUFLRCxh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LE9BQVEsSUFFUjBCLE1BQU8sd0JBQ1BDLE9BQVEsdUJBQ1JDLEtBQU0sZ0JBQ05DLEtBQU0sb0NBQ043QixPQUFRLElBRVIwQixNQUFPLGFBQ1BDLE9BQVEsaUJBQ1JDLEtBQU0sY0FDTkMsS0FBTSxhQUNON0IsT0FBUSxJQUVSMEIsTUFBTyxxQkFDUEMsT0FBUSxZQUNSQyxLQUFNLGVBQ05DLEtBQU0sMEJBQ043QixPQUFRLElBTWRtQixHQUFnQlcsRUFBZ0IsV0FDaENYLEVBQWdCTSxFQUFnQiIsImZpbGUiOiJhbGwtbWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvSFRNTE1lZGlhRWxlbWVudFxuLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvR3VpZGUvSFRNTC9Vc2luZ19IVE1MNV9hdWRpb19hbmRfdmlkZW9cblxuJChmdW5jdGlvbiAoKSB7XG5cbiAgdmFyIGF1ZGlvUGxheWVyID0gZnVuY3Rpb24gYXVkaW9QbGF5ZXIoJGF1ZGlvUGxheWVyKSB7XG5cbiAgICB0aGlzLiRhdWRpb1BsYXllciA9ICRhdWRpb1BsYXllcjtcblxuICAgIHRoaXMuJHBsYXlQYXVzZUJ0biA9IHRoaXMuJGF1ZGlvUGxheWVyLmZpbmQoJy5wbGF5LXBhdXNlJykuZXEoMCk7XG4gICAgdGhpcy4kdHJhY2sgPSB0aGlzLiRhdWRpb1BsYXllci5maW5kKCdhdWRpbycpLmVxKDApO1xuICAgIHRoaXMudHJhY2sgPSB0aGlzLiR0cmFjay5nZXQoMCk7XG5cbiAgICB0aGlzLiRwcm9ncmVzc0JhciA9IHRoaXMuJGF1ZGlvUGxheWVyLmZpbmQoJy5wcm9ncmVzcy1iYXInKS5lcSgwKTtcbiAgICB0aGlzLiRidWZmZXIgPSB0aGlzLiRwcm9ncmVzc0Jhci5maW5kKCcuYnVmZmVyJykuZXEoMCk7XG4gICAgdGhpcy4kcGxheWVkID0gdGhpcy4kcHJvZ3Jlc3NCYXIuZmluZCgnLnBsYXllZCcpLmVxKDApO1xuXG4gICAgdGhpcy4kY3VycmVudFRpbWUgPSB0aGlzLiRhdWRpb1BsYXllci5maW5kKCcuY3VycmVudC10aW1lJykuZXEoMCk7XG4gICAgdGhpcy4kbWl4TGVuZ3RoID0gdGhpcy4kYXVkaW9QbGF5ZXIuZmluZCgnLm1peC1sZW5ndGgnKS5lcSgwKTtcbiAgICB0aGlzLiRkaXZpZGVyID0gdGhpcy4kYXVkaW9QbGF5ZXIuZmluZCgnLmRpdmlkZXInKS5lcSgwKTtcblxuICAgIHRoaXMudHJhY2tSZWZyZXNoVGltZXIgPSBudWxsO1xuICB9O1xuXG4gIC8vUGF1c2UgYWxsIHRyYWNrcyBvbiB0aGUgcGFnZSBvdGhlciB0aGFuICd0aGlzJyBvbmVcbiAgYXVkaW9QbGF5ZXIucHJvdG90eXBlLnBhdXNlQWxsT3RoZXJzID0gZnVuY3Rpb24gKCkge1xuXG4gICAgJCgnLmF1ZGlvLXBsYXllcicpLm5vdCh0aGlzLiRhdWRpb1BsYXllcikuZWFjaChmdW5jdGlvbiAoKSB7XG5cbiAgICAgIHZhciBwbGF5ciA9IG5ldyBhdWRpb1BsYXllcigkKHRoaXMpKTtcbiAgICAgIHBsYXlyLnBhdXNlVHJhY2soKTtcbiAgICB9KTtcbiAgfTtcblxuICAvL2NoZWNrIGlmIHRoaXMgcGxheWVyIGlzIHBhdXNlZFxuICBhdWRpb1BsYXllci5wcm90b3R5cGUuaXNQYXVzZWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHRoaXMudHJhY2sucGF1c2VkO1xuICB9O1xuXG4gIGF1ZGlvUGxheWVyLnByb3RvdHlwZS5wYXVzZVRyYWNrID0gZnVuY3Rpb24gKCRhdWRpb1BsYXllcikge1xuICAgIHRoaXMudHJhY2sucGF1c2UoKTtcbiAgICB0aGlzLiRhdWRpb1BsYXllci5yZW1vdmVDbGFzcygncGxheWluZycpO1xuICAgIHRoaXMuJHByb2dyZXNzQmFyLnJlbW92ZUNsYXNzKCdleHBhbmRlZCcpO1xuICB9O1xuICBhdWRpb1BsYXllci5wcm90b3R5cGUucGxheVRyYWNrID0gZnVuY3Rpb24gKCRhdWRpb1BsYXllcikge1xuXG4gICAgZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnTWl4JywgJ3BsYXknLCB0aGlzLiRhdWRpb1BsYXllci5hdHRyKCdpZCcpLCB0aGlzLiRhdWRpb1BsYXllci5kYXRhKCdyYXRpbmcnKSk7XG5cbiAgICB0aGlzLnBhdXNlQWxsT3RoZXJzKCk7XG4gICAgdGhpcy50cmFjay5wbGF5KCk7XG4gICAgdGhpcy4kYXVkaW9QbGF5ZXIuYWRkQ2xhc3MoJ3BsYXlpbmcnKTtcbiAgICB0aGlzLiRwcm9ncmVzc0Jhci5hZGRDbGFzcygnZXhwYW5kZWQnKTtcblxuICAgIHRoaXMuc3RhcnRJbnRlcnZhbCgpO1xuXG4gICAgdGhpcy4kY3VycmVudFRpbWUudGV4dCh0aGlzLmN1cnJlbnRUaW1lU3RyaW5nKCkpO1xuICAgIHRoaXMuJGRpdmlkZXIuc2hvdygpO1xuICAgIHRoaXMuJG1peExlbmd0aC50ZXh0KHRoaXMuZHVyYXRpb25TdHJpbmcoKSk7XG4gIH07XG5cbiAgYXVkaW9QbGF5ZXIucHJvdG90eXBlLnN0YXJ0SW50ZXJ2YWwgPSBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy50cmFja1JlZnJlc2hUaW1lciA9IHNldEludGVydmFsKHRoaXMudGljay5iaW5kKHRoaXMpLCAxMDApO1xuICB9O1xuICBhdWRpb1BsYXllci5wcm90b3R5cGUuY2xlYXJJbnRlcnZhbCA9IGZ1bmN0aW9uICgpIHtcbiAgICBjbGVhckludGVydmFsKHRoaXMudHJhY2tSZWZyZXNoVGltZXIpO1xuICB9O1xuICBhdWRpb1BsYXllci5wcm90b3R5cGUudGljayA9IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLiRjdXJyZW50VGltZS50ZXh0KHRoaXMuY3VycmVudFRpbWVTdHJpbmcoKSk7XG4gICAgdGhpcy51cGRhdGVQcm9ncmVzc0JhcigpO1xuICB9O1xuXG4gIGF1ZGlvUGxheWVyLnByb3RvdHlwZS51cGRhdGVQcm9ncmVzc0JhciA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgcGxheVBlcmNlbnRhZ2UgPSB0aGlzLnRyYWNrLmN1cnJlbnRUaW1lIC8gdGhpcy50cmFjay5kdXJhdGlvbiAqIDEwMDtcbiAgICB0aGlzLiRwbGF5ZWQuY3NzKCd3aWR0aCcsIHBsYXlQZXJjZW50YWdlICsgJyUnKTtcbiAgfTtcblxuICBhdWRpb1BsYXllci5wcm90b3R5cGUuY3VycmVudFRpbWVTdHJpbmcgPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHRoaXMudGltZVN0cmluZyh0aGlzLnRyYWNrLmN1cnJlbnRUaW1lKTtcbiAgfTtcblxuICBhdWRpb1BsYXllci5wcm90b3R5cGUuZHVyYXRpb25TdHJpbmcgPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHRoaXMudGltZVN0cmluZyh0aGlzLnRyYWNrLmR1cmF0aW9uKTtcbiAgfTtcblxuICAvLyBSZXR1cm5zIGEgdGltZSBsaWtlIE1NOlNTXG4gIGF1ZGlvUGxheWVyLnByb3RvdHlwZS50aW1lU3RyaW5nID0gZnVuY3Rpb24gKHRpbWUpIHtcblxuICAgIGlmIChpc05hTih0aW1lKSkge1xuICAgICAgLy9lZWssIHRyeSBhZ2Fpbi4gSGFyZCB0byByZXByb2R1Y2VcbiAgICAgIGlmIChpc05hTih0aGlzLnRyYWNrLmR1cmF0aW9uKSkge1xuICAgICAgICByZXR1cm4gJyc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLnRyYWNrLmR1cmF0aW9uO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciBzZWNvbmRzID0gXCIwXCIgKyBNYXRoLnJvdW5kKHRpbWUgJSA2MCk7XG4gICAgc2Vjb25kcyA9IHNlY29uZHMuc3Vic3RyKHNlY29uZHMubGVuZ3RoIC0gMik7XG5cbiAgICByZXR1cm4gTWF0aC5yb3VuZCh0aW1lIC8gNjApICsgJzonICsgc2Vjb25kcztcbiAgfTtcblxuICAvLyBQbGF5IGlmIHBhdXNlZCwgcGF1c2UgaWYgcGxheWluZ1xuICBhdWRpb1BsYXllci5wcm90b3R5cGUudG9nZ2xlUGxheVBhdXNlID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuaXNQYXVzZWQoKSA/IHRoaXMucGxheVRyYWNrKCkgOiB0aGlzLnBhdXNlVHJhY2soKTtcbiAgfTtcblxuICBhdWRpb1BsYXllci5wcm90b3R5cGUuc2VlayA9IGZ1bmN0aW9uIChldmVudCkge1xuXG4gICAgdmFyIHBsYXlQZXJjZW50YWdlID0gZXZlbnQub2Zmc2V0WCAvICQoZXZlbnQudGFyZ2V0KS53aWR0aCgpO1xuICAgIHRoaXMudHJhY2suY3VycmVudFRpbWUgPSBwbGF5UGVyY2VudGFnZSAqIHRoaXMudHJhY2suZHVyYXRpb247XG4gICAgdGhpcy51cGRhdGVQcm9ncmVzc0JhcigpO1xuICB9O1xuXG4gICQoJ2JvZHknKS5vbignY2xpY2snLCAnLnBsYXktcGF1c2UnLCBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHBsYXllciA9IG5ldyBhdWRpb1BsYXllcigkKHRoaXMpLmNsb3Nlc3QoJy5hdWRpby1wbGF5ZXInKS5lcSgwKSk7XG4gICAgcGxheWVyLnRvZ2dsZVBsYXlQYXVzZSgpO1xuICB9KTtcblxuICAkKCdib2R5Jykub24oJ2NsaWNrJywgJy5wcm9ncmVzcy1iYXInLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICB2YXIgcGxheWVyID0gbmV3IGF1ZGlvUGxheWVyKCQodGhpcykuY2xvc2VzdCgnLmF1ZGlvLXBsYXllcicpLmVxKDApKTtcbiAgICBwbGF5ZXIuc2VlayhldmVudCk7XG4gIH0pO1xuXG4gIC8vc2VuZCBnb29nbGUtYW5hbHl0aWNzIHN0YXRzIGZvciBhIG1peCBkb3dubG9hZFxuICAkKCdib2R5Jykub24oJ2NsaWNrJywgJy5kb3dubG9hZCcsIGZ1bmN0aW9uIChldmVudCkge1xuICAgIGdhKCdzZW5kJywgJ2V2ZW50JywgJ01peCcsICdkb3dubG9hZCcsICQodGhpcykuY2xvc2VzdCgnLmF1ZGlvLXBsYXllcicpLmF0dHIoJ2lkJyksICQodGhpcykuY2xvc2VzdCgnLmF1ZGlvLXBsYXllcicpLmRhdGEoJ3JhdGluZycpKTtcbiAgfSk7XG59KTtcblwidXNlIHN0cmljdFwiO1xuXG4vKiFcbiAqIFN0YXJ0IEJvb3RzdHJhcCAtIEdyYXlzY2FsZSBCb290c3RyYXAgVGhlbWUgKGh0dHA6Ly9zdGFydGJvb3RzdHJhcC5jb20pXG4gKiBDb2RlIGxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSB2Mi4wLlxuICogRm9yIGRldGFpbHMsIHNlZSBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAuXG4gKi9cblxuLy8galF1ZXJ5IHRvIGNvbGxhcHNlIHRoZSBuYXZiYXIgb24gc2Nyb2xsXG5mdW5jdGlvbiBjb2xsYXBzZU5hdmJhcigpIHtcbiAgICBpZiAoJChcIi5uYXZiYXJcIikub2Zmc2V0KCkudG9wID4gJChcIiN3YXZlc1wiKS5vZmZzZXQoKS50b3AgLSAxNTApIHtcbiAgICAgICAgJChcIi5uYXZiYXItZml4ZWQtdG9wXCIpLmFkZENsYXNzKFwidG9wLW5hdi1jb2xsYXBzZVwiKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICAkKFwiLm5hdmJhci1maXhlZC10b3BcIikucmVtb3ZlQ2xhc3MoXCJ0b3AtbmF2LWNvbGxhcHNlXCIpO1xuICAgIH1cbn1cblxuJCh3aW5kb3cpLnNjcm9sbChjb2xsYXBzZU5hdmJhcik7XG4kKGRvY3VtZW50KS5yZWFkeShjb2xsYXBzZU5hdmJhcik7XG5cbi8vIGpRdWVyeSBmb3IgcGFnZSBzY3JvbGxpbmcgZmVhdHVyZSAtIHJlcXVpcmVzIGpRdWVyeSBFYXNpbmcgcGx1Z2luXG4kKGZ1bmN0aW9uICgpIHtcbiAgICAkKCdhLnBhZ2Utc2Nyb2xsJykuYmluZCgnY2xpY2snLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgdmFyICRhbmNob3IgPSAkKHRoaXMpO1xuICAgICAgICAvLyAkKCdodG1sLCBib2R5Jykuc3RvcCgpLmFuaW1hdGUoe1xuICAgICAgICAvLyAgICAgc2Nyb2xsVG9wOiAkKCRhbmNob3IuYXR0cignaHJlZicpKS5vZmZzZXQoKS50b3BcbiAgICAgICAgLy8gfSwgMTUwMCwgJ2Vhc2VJbk91dEV4cG8nKTtcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICB9KTtcbn0pO1xuXG4vLyBDbG9zZXMgdGhlIFJlc3BvbnNpdmUgTWVudSBvbiBNZW51IEl0ZW0gQ2xpY2tcbiQoJy5uYXZiYXItY29sbGFwc2UgdWwgbGkgYScpLmNsaWNrKGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoJCh0aGlzKS5hdHRyKCdjbGFzcycpICE9ICdkcm9wZG93bi10b2dnbGUgYWN0aXZlJyAmJiAkKHRoaXMpLmF0dHIoJ2NsYXNzJykgIT0gJ2Ryb3Bkb3duLXRvZ2dsZScpIHtcbiAgICAgICAgJCgnLm5hdmJhci10b2dnbGU6dmlzaWJsZScpLmNsaWNrKCk7XG4gICAgfVxufSk7XG4ndXNlIHN0cmljdCc7XG5cbi8qIFxuICBBbmltYXRlIHJhdGluZ3MgYmFyIGJ5IGNoYW5naW5nIG9wYWNpdHkgb2Ygc2V2ZXJhbCBibG9ja3NcbiAgKi9cbiQoZnVuY3Rpb24gKCkge1xuXG4gIC8vICA2MHMvMTI1YnBtID0gNDgwbXNcbiAgdmFyIEFOSU1BVElPTl9QRVJJT0QgPSA2MC4wIC8gMTI1ICogMTAwMDtcbiAgdmFyIERFRkFVTFRfT1BBQ0lUWSA9ICcwLjQnO1xuICB2YXIgSU5DUkVBU0VEX09QQUNJVFkgPSAnMC41JztcbiAgdmFyICRyYXRpbmdfYmxvY2tzID0gJCgnLmJvdHRvbS1iYXIgLnJhdGluZy1ibG9jaycpO1xuICB2YXIgbnVtX3JhdGluZ3MgPSAkcmF0aW5nX2Jsb2Nrcy5sZW5ndGg7XG4gIHZhciBvcmlnaW5hbF9ibG9ja19oZWlnaHQgPSAkcmF0aW5nX2Jsb2Nrcy5lcSgwKS5oZWlnaHQoKTtcblxuICBpZiAobnVtX3JhdGluZ3MgPT09IDApIHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvLyBFdmVyeSB4IG1zLCBkby4uLlxuICAvLyAgcmVzZXQgYWxsIG9wYWNpdGllc1xuICAvLyAgY2hvb3NlIHggcmFuZG9tIHJhdGluZyBibG9ja3MgdG8gZGFya2VuXG4gIC8vICBjaG9vc2UgYSByYW5kb20gYmxvY2sgZnJvbSB0aGF0IGdyb3VwIHRvIGRhcmtlbiwgb3ZlcmxhcCBva1xuICAvLyBzZXRJbnRlcnZhbChmdW5jdGlvbigpIHtcbiAgc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkge1xuXG4gICAgLy9lYWNoIHRpbWUsIGEgZGlmZmVyZW50IG51bWJlciBvZiBibG9ja3MgYXJlIGNob3NlblxuICAgIHZhciBibG9ja3NfdG9fYmxhbmsgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBudW1fcmF0aW5ncykgKyAxO1xuXG4gICAgJHJhdGluZ19ibG9ja3Mubm90KCcuYWN0aXZlJykuY3NzKCdvcGFjaXR5JywgREVGQVVMVF9PUEFDSVRZKTtcbiAgICAvLyAuY3NzKCdoZWlnaHQnLCBvcmlnaW5hbF9ibG9ja19oZWlnaHQrJ3B4Jyk7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGJsb2Nrc190b19ibGFuazsgaSsrKSB7XG4gICAgICB2YXIgcmFuZF9ibG9ja19pbmRleCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIG51bV9yYXRpbmdzKSArIDE7XG5cbiAgICAgIGlmICghJHJhdGluZ19ibG9ja3MuZXEocmFuZF9ibG9ja19pbmRleCkuaGFzQ2xhc3MoJ2FjdGl2ZScpKSB7XG4gICAgICAgICRyYXRpbmdfYmxvY2tzLmVxKHJhbmRfYmxvY2tfaW5kZXgpLmNzcygnb3BhY2l0eScsIElOQ1JFQVNFRF9PUEFDSVRZKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIEFOSU1BVElPTl9QRVJJT0QpO1xuXG4gIC8vIGNvbnRyb2wgc2hvd2luZyBWLXJhdGluZyBkZXNjcmlwdGlvbnMgb24gaG92ZXIgb2YgVi1jb2xvciBidXR0b25cbiAgJCgnLmJvdHRvbS1iYXIgPiBkaXYnKS5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHJhdGluZyA9ICQodGhpcykuZmluZCgnLnJhdGluZy1ibG9jaycpLmRhdGEoJ3JhdGluZycpO1xuICAgIHNob3dBbmRIaWdobGlnaHRSYXRpbmcocmF0aW5nKTtcbiAgfSk7XG5cbiAgZnVuY3Rpb24gc2hvd0FuZEhpZ2hsaWdodFJhdGluZyhyYXRpbmcpIHtcblxuICAgIC8vaGlkZSBhbGwgb3RoZXIgZGVzY3JpcHRpb25zXG4gICAgJCgnLnYtZGVzY3JpcHRpb25zID4gcCcpLm5vdCgnLnYtZGVzY3JpcHRpb25zID4gcFtkYXRhLXJhdGluZz1cIicgKyByYXRpbmcgKyAnXCJdJykuaGlkZSgpO1xuXG4gICAgLy9yZW1vdmUgb3RoZXIgYWN0aXZlIG9wYWNpdGllc1xuICAgICQoJy5ib3R0b20tYmFyID4gZGl2IC5yYXRpbmctYmxvY2snKS5ub3QoJy5ib3R0b20tYmFyID4gZGl2IC5yYXRpbmctYmxvY2tbZGF0YS1yYXRpbmc9XCInICsgcmF0aW5nICsgJ1wiXScpLmNzcygnb3BhY2l0eScsIERFRkFVTFRfT1BBQ0lUWSkucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xuXG4gICAgJCgnLmJvdHRvbS1iYXIgPiBkaXYgLnJhdGluZy1ibG9ja1tkYXRhLXJhdGluZz1cIicgKyByYXRpbmcgKyAnXCJdJykuY3NzKCdvcGFjaXR5JywgMSkuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xuXG4gICAgJCgnLnYtZGVzY3JpcHRpb25zID4gcFtkYXRhLXJhdGluZz1cIicgKyByYXRpbmcgKyAnXCJdJykuc2hvdygpO1xuICB9XG59KTtcblxuJChmdW5jdGlvbiAoKSB7XG5cbiAgLy9nZXQgdGhlIHN0dWIgZnJvbSB0aGUgdXJsLCBsaWtlIGRqbW91bnRhaW5vdXMuY29tP2JsdWVwcmludC0xOS13YXJtdXBcbiAgdmFyIHNlYXJjaCA9IHdpbmRvdy5sb2NhdGlvbi5zZWFyY2gucmVwbGFjZShcIj9cIiwgXCJcIik7XG5cbiAgLy9zY3JvbGwgdGhhdCBlbGVtZW50J3MgdG9wICBcbiAgLy8gc2V0VGltZW91dChmdW5jdGlvbigpeyBcblxuICAvLyAgIC8vICQoJ2h0bWwsIGJvZHknKS5zY3JvbGxUb3AoJCgnLicrc2VhcmNoKS5vZmZzZXQoKS50b3AtMzAwKTtcbiAgLy8gICAvLyAkKCcubWl4Jykubm90KCcuJytzZWFyY2gpLmNzcygnb3BhY2l0eScsIDAuNik7XG4gIC8vICAgLy8gJCgnLm1peC1ncm91cF9fdGl0bGUsIC5ncm91cC1kZXNjcmlwdGlvbicpLmNzcygnb3BhY2l0eScsIDAuNik7XG4gIC8vIH0sIDE4MDApOyBcblxuICAvL3doZW4gYW55dGhpbmcgaXMgY2xpY2tlZCwgc2V0IHRoZSBvcGFjaXR5IG9mIHRoZSBtaXhlcyBiYWNrIHRvIDFcbiAgJCgnKicpLm9uKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcbiAgICAkKCcubWl4JykuY3NzKCdvcGFjaXR5JywgMSk7XG4gIH0pO1xuXG4gICQoJyNtaXhlcycpLm9uKCdjbGljaycsICcubWl4X19kZXRhaWxzIC5yYXRpbmcnLCBmdW5jdGlvbiAoKSB7XG4gICAgJCgnLnJhdGluZy1ibG9ja1tkYXRhLXJhdGluZz1cIicgKyAkKHRoaXMpLmRhdGEoJ3JhdGluZycpICsgJ1wiXScpLmNsb3Nlc3QoJ2RpdicpLnRyaWdnZXIoJ2hvdmVyJyk7XG4gICAgJCgnLnJhdGluZy1ibG9ja1tkYXRhLXJhdGluZz1cIicgKyAkKHRoaXMpLmRhdGEoJ3JhdGluZycpICsgJ1wiXScpLmNsb3Nlc3QoJ2RpdicpLnRyaWdnZXIoJ2NsaWNrJyk7XG4gICAgJCgnaHRtbCwgYm9keScpLnNjcm9sbFRvcCgkKCcuYm90dG9tLWJhcicpLm9mZnNldCgpLnRvcCAtIDEzMCk7XG4gIH0pO1xufSk7XG5cInVzZSBzdHJpY3RcIjtcblxuJChmdW5jdGlvbiAoKSB7XG5cbiAgLy8gbWl4ZXMgTVVTVCBiZSBuYW1lZCBkai1tb3V0YWlub3VzLXtzbHVnfS4obXAzL200YSlcbiAgLy8gaS5lLiBkai1tb3VudGFpbm91cy12YS10ZWNoLWhvdXNlXG5cbiAgdmFyIGNhbG1fbWl4ZXMgPSB7XG4gICAgbWl4ZXM6IFtcbiAgICAvL25ldyBtaXggZ29lcyBoZXJlXG4gICAge1xuICAgICAgdGl0bGU6IFwiVGhlIEVpZ2VyXCIsXG4gICAgICBnZW5yZXM6IFwiVGVjaCBIb3VzZVwiLFxuICAgICAgZGF0ZTogXCJTZXB0IDIwMTZcIixcbiAgICAgIHNsdWc6IFwidmEtdGVjaC1ob3VzZVwiLFxuICAgICAgcmF0aW5nOiAzXG4gICAgfSwge1xuICAgICAgdGl0bGU6IFwiR2FyaWJhbGRpXCIsXG4gICAgICBnZW5yZXM6IFwiRGVlcCBIb3VzZVwiLFxuICAgICAgZGF0ZTogXCJKdW5lIDIwMTZcIixcbiAgICAgIHNsdWc6IFwidmEtZGVlcC1ob3VzZS12MlwiLFxuICAgICAgcmF0aW5nOiAyXG4gICAgfV1cbiAgfTtcblxuICB2YXIgaW50ZW5zZV9taXhlcyA9IHtcbiAgICBtaXhlczogW1xuICAgIC8vbmV3IG1peCBnb2VzIGhlcmVcbiAgICB7XG4gICAgICB0aXRsZTogXCJCbHVlcHJpbnQgMTl0aCBXYXJtdXBcIixcbiAgICAgIGdlbnJlczogXCJSZXp6IEdyaXogR3JpbWUgVy5TLk4gREZyYW5jaXNcIixcbiAgICAgIGRhdGU6IFwiT2N0b2JlciAyMDE2XCIsXG4gICAgICBzbHVnOiBcImJsdWVwcmludC0xOS13YXJtdXBcIixcbiAgICAgIHJhdGluZzogOVxuICAgIH0sIHtcbiAgICAgIHRpdGxlOiBcIkxpdmUgQCBCaXJ0aFJhdmUgMjAxNlwiLFxuICAgICAgZ2VucmVzOiBcIkJhc3MgRnVuaywgVHJhcCwgRHViXCIsXG4gICAgICBkYXRlOiBcIlNlcHQgMjQsIDIwMTZcIixcbiAgICAgIHNsdWc6IFwibGl2ZS1iaXJ0aHJhdmUtMjAxNi1iYXNzLWZ1bmstZHViXCIsXG4gICAgICByYXRpbmc6IDhcbiAgICB9LCB7XG4gICAgICB0aXRsZTogXCJCbGFjayBUdXNrXCIsXG4gICAgICBnZW5yZXM6IFwiVHJhcCAmIER1YnN0ZXBcIixcbiAgICAgIGRhdGU6IFwiQXVndXN0IDIwMTZcIixcbiAgICAgIHNsdWc6IFwidmEtZHVidHJhcFwiLFxuICAgICAgcmF0aW5nOiA5XG4gICAgfSwge1xuICAgICAgdGl0bGU6IFwiU2V2ZW4gTGlvbnMgd2FybXVwXCIsXG4gICAgICBnZW5yZXM6IFwiRHJlYW1zdGVwXCIsXG4gICAgICBkYXRlOiBcIk9jdG9iZXIgMjAxNlwiLFxuICAgICAgc2x1ZzogXCJzZXZlbi1saW9ucy13YXJtLXVwLW1peFwiLFxuICAgICAgcmF0aW5nOiA3XG4gICAgfV1cbiAgfTsgLy8gaW50ZW5zZSBtaXhlc1xuXG4gIC8vIC8vaW5qZWN0IGhhbmRsZWJhcnMgdGVtcGxhdGVzIHdpdGggbWl4IGRhdGFcbiAgaW5qZWN0VGVtcGxhdGVzKGludGVuc2VfbWl4ZXMsICdpbnRlbnNlJyk7XG4gIGluamVjdFRlbXBsYXRlcyhjYWxtX21peGVzLCAnY2FsbScpO1xuXG4gIGZ1bmN0aW9uIGluamVjdFRlbXBsYXRlcyhkYXRhLCB0eXBlKSB7XG5cbiAgICB2YXIgaHRtbCA9IE15QXBwLnRlbXBsYXRlcy5taXhlcyhkYXRhKTtcbiAgICAkKCcjbWl4ZXMtdG1wbC0nICsgdHlwZSkuaHRtbChodG1sKTtcbiAgfVxufSk7IiwiLyohXG4gKiBTdGFydCBCb290c3RyYXAgLSBHcmF5c2NhbGUgQm9vdHN0cmFwIFRoZW1lIChodHRwOi8vc3RhcnRib290c3RyYXAuY29tKVxuICogQ29kZSBsaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UgdjIuMC5cbiAqIEZvciBkZXRhaWxzLCBzZWUgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wLlxuICovXG5cbi8vIGpRdWVyeSB0byBjb2xsYXBzZSB0aGUgbmF2YmFyIG9uIHNjcm9sbFxuZnVuY3Rpb24gY29sbGFwc2VOYXZiYXIoKSB7XG4gICAgaWYgKCQoXCIubmF2YmFyXCIpLm9mZnNldCgpLnRvcCA+ICQoXCIjd2F2ZXNcIikub2Zmc2V0KCkudG9wIC0gMTUwKSB7XG4gICAgICAgICQoXCIubmF2YmFyLWZpeGVkLXRvcFwiKS5hZGRDbGFzcyhcInRvcC1uYXYtY29sbGFwc2VcIik7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgJChcIi5uYXZiYXItZml4ZWQtdG9wXCIpLnJlbW92ZUNsYXNzKFwidG9wLW5hdi1jb2xsYXBzZVwiKTtcbiAgICB9XG59XG4gXG4kKHdpbmRvdykuc2Nyb2xsKGNvbGxhcHNlTmF2YmFyKTtcbiQoZG9jdW1lbnQpLnJlYWR5KGNvbGxhcHNlTmF2YmFyKTtcblxuLy8galF1ZXJ5IGZvciBwYWdlIHNjcm9sbGluZyBmZWF0dXJlIC0gcmVxdWlyZXMgalF1ZXJ5IEVhc2luZyBwbHVnaW5cbiQoZnVuY3Rpb24oKSB7XG4gICAgJCgnYS5wYWdlLXNjcm9sbCcpLmJpbmQoJ2NsaWNrJywgZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgICAgdmFyICRhbmNob3IgPSAkKHRoaXMpO1xuICAgICAgICAvLyAkKCdodG1sLCBib2R5Jykuc3RvcCgpLmFuaW1hdGUoe1xuICAgICAgICAvLyAgICAgc2Nyb2xsVG9wOiAkKCRhbmNob3IuYXR0cignaHJlZicpKS5vZmZzZXQoKS50b3BcbiAgICAgICAgLy8gfSwgMTUwMCwgJ2Vhc2VJbk91dEV4cG8nKTtcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICB9KTtcbn0pO1xuXG4vLyBDbG9zZXMgdGhlIFJlc3BvbnNpdmUgTWVudSBvbiBNZW51IEl0ZW0gQ2xpY2tcbiQoJy5uYXZiYXItY29sbGFwc2UgdWwgbGkgYScpLmNsaWNrKGZ1bmN0aW9uKCkge1xuICBpZiAoJCh0aGlzKS5hdHRyKCdjbGFzcycpICE9ICdkcm9wZG93bi10b2dnbGUgYWN0aXZlJyAmJiAkKHRoaXMpLmF0dHIoJ2NsYXNzJykgIT0gJ2Ryb3Bkb3duLXRvZ2dsZScpIHtcbiAgICAkKCcubmF2YmFyLXRvZ2dsZTp2aXNpYmxlJykuY2xpY2soKTtcbiAgfVxufSk7XG4iLCJcbi8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9IVE1MTWVkaWFFbGVtZW50XG4vLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9HdWlkZS9IVE1ML1VzaW5nX0hUTUw1X2F1ZGlvX2FuZF92aWRlb1xuXG4kKGZ1bmN0aW9uKCl7XG5cbiAgdmFyIGF1ZGlvUGxheWVyID0gZnVuY3Rpb24oJGF1ZGlvUGxheWVyKXtcblxuICAgIHRoaXMuJGF1ZGlvUGxheWVyID0gJGF1ZGlvUGxheWVyO1xuXG4gICAgdGhpcy4kcGxheVBhdXNlQnRuID0gdGhpcy4kYXVkaW9QbGF5ZXIuZmluZCgnLnBsYXktcGF1c2UnKS5lcSgwKTtcbiAgICB0aGlzLiR0cmFjayA9IHRoaXMuJGF1ZGlvUGxheWVyLmZpbmQoJ2F1ZGlvJykuZXEoMCk7XG4gICAgdGhpcy50cmFjayA9IHRoaXMuJHRyYWNrLmdldCgwKTtcblxuICAgIHRoaXMuJHByb2dyZXNzQmFyID0gdGhpcy4kYXVkaW9QbGF5ZXIuZmluZCgnLnByb2dyZXNzLWJhcicpLmVxKDApO1xuICAgIHRoaXMuJGJ1ZmZlciAgICAgID0gdGhpcy4kcHJvZ3Jlc3NCYXIuZmluZCgnLmJ1ZmZlcicpLmVxKDApO1xuICAgIHRoaXMuJHBsYXllZCAgICAgID0gdGhpcy4kcHJvZ3Jlc3NCYXIuZmluZCgnLnBsYXllZCcpLmVxKDApO1xuXG4gICAgdGhpcy4kY3VycmVudFRpbWUgPSB0aGlzLiRhdWRpb1BsYXllci5maW5kKCcuY3VycmVudC10aW1lJykuZXEoMCk7XG4gICAgdGhpcy4kbWl4TGVuZ3RoICAgPSB0aGlzLiRhdWRpb1BsYXllci5maW5kKCcubWl4LWxlbmd0aCcpLmVxKDApO1xuICAgIHRoaXMuJGRpdmlkZXIgICAgID0gdGhpcy4kYXVkaW9QbGF5ZXIuZmluZCgnLmRpdmlkZXInKS5lcSgwKTtcblxuICAgIHRoaXMudHJhY2tSZWZyZXNoVGltZXIgPSBudWxsO1xuICB9XG5cbiAgLy9QYXVzZSBhbGwgdHJhY2tzIG9uIHRoZSBwYWdlIG90aGVyIHRoYW4gJ3RoaXMnIG9uZVxuICBhdWRpb1BsYXllci5wcm90b3R5cGUucGF1c2VBbGxPdGhlcnMgPSBmdW5jdGlvbigpe1xuXG4gICAgJCgnLmF1ZGlvLXBsYXllcicpLm5vdCh0aGlzLiRhdWRpb1BsYXllcikuZWFjaChmdW5jdGlvbigpe1xuICAgICAgXG4gICAgICB2YXIgcGxheXIgPSBuZXcgYXVkaW9QbGF5ZXIoJCh0aGlzKSk7XG4gICAgICBwbGF5ci5wYXVzZVRyYWNrKCk7XG5cbiAgICB9KTtcbiAgfVxuXG4gIC8vY2hlY2sgaWYgdGhpcyBwbGF5ZXIgaXMgcGF1c2VkXG4gIGF1ZGlvUGxheWVyLnByb3RvdHlwZS5pc1BhdXNlZCA9IGZ1bmN0aW9uKCl7XG4gICAgcmV0dXJuIHRoaXMudHJhY2sucGF1c2VkO1xuICB9XG5cbiAgYXVkaW9QbGF5ZXIucHJvdG90eXBlLnBhdXNlVHJhY2sgPSBmdW5jdGlvbigkYXVkaW9QbGF5ZXIpe1xuICAgIHRoaXMudHJhY2sucGF1c2UoKTtcbiAgICB0aGlzLiRhdWRpb1BsYXllci5yZW1vdmVDbGFzcygncGxheWluZycpO1xuICAgIHRoaXMuJHByb2dyZXNzQmFyLnJlbW92ZUNsYXNzKCdleHBhbmRlZCcpO1xuICB9XG4gIGF1ZGlvUGxheWVyLnByb3RvdHlwZS5wbGF5VHJhY2sgPSBmdW5jdGlvbigkYXVkaW9QbGF5ZXIpe1xuXG4gICAgZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnTWl4JywgJ3BsYXknLCBcbiAgICAgIHRoaXMuJGF1ZGlvUGxheWVyLmF0dHIoJ2lkJyksIHRoaXMuJGF1ZGlvUGxheWVyLmRhdGEoJ3JhdGluZycpKTtcblxuICAgIHRoaXMucGF1c2VBbGxPdGhlcnMoKTtcbiAgICB0aGlzLnRyYWNrLnBsYXkoKTtcbiAgICB0aGlzLiRhdWRpb1BsYXllci5hZGRDbGFzcygncGxheWluZycpO1xuICAgIHRoaXMuJHByb2dyZXNzQmFyLmFkZENsYXNzKCdleHBhbmRlZCcpO1xuXG4gICAgdGhpcy5zdGFydEludGVydmFsKCk7XG5cbiAgICB0aGlzLiRjdXJyZW50VGltZS50ZXh0KHRoaXMuY3VycmVudFRpbWVTdHJpbmcoKSk7XG4gICAgdGhpcy4kZGl2aWRlci5zaG93KCk7XG4gICAgdGhpcy4kbWl4TGVuZ3RoLnRleHQodGhpcy5kdXJhdGlvblN0cmluZygpKTtcbiAgfVxuXG4gIGF1ZGlvUGxheWVyLnByb3RvdHlwZS5zdGFydEludGVydmFsID0gZnVuY3Rpb24oKXtcbiAgICB0aGlzLnRyYWNrUmVmcmVzaFRpbWVyID0gc2V0SW50ZXJ2YWwodGhpcy50aWNrLmJpbmQodGhpcyksIDEwMCk7XG4gIH1cbiAgYXVkaW9QbGF5ZXIucHJvdG90eXBlLmNsZWFySW50ZXJ2YWwgPSBmdW5jdGlvbigpe1xuICAgIGNsZWFySW50ZXJ2YWwodGhpcy50cmFja1JlZnJlc2hUaW1lcik7XG4gIH1cbiAgYXVkaW9QbGF5ZXIucHJvdG90eXBlLnRpY2sgPSBmdW5jdGlvbigpe1xuICAgIHRoaXMuJGN1cnJlbnRUaW1lLnRleHQodGhpcy5jdXJyZW50VGltZVN0cmluZygpKTtcbiAgICB0aGlzLnVwZGF0ZVByb2dyZXNzQmFyKCk7XG4gIH1cblxuICBhdWRpb1BsYXllci5wcm90b3R5cGUudXBkYXRlUHJvZ3Jlc3NCYXIgPSBmdW5jdGlvbigpe1xuICAgIHZhciBwbGF5UGVyY2VudGFnZSA9ICh0aGlzLnRyYWNrLmN1cnJlbnRUaW1lIC8gdGhpcy50cmFjay5kdXJhdGlvbikgKiAxMDA7XG4gICAgdGhpcy4kcGxheWVkLmNzcygnd2lkdGgnLCBwbGF5UGVyY2VudGFnZSsnJScpO1xuICB9XG5cbiAgYXVkaW9QbGF5ZXIucHJvdG90eXBlLmN1cnJlbnRUaW1lU3RyaW5nID0gZnVuY3Rpb24oKXtcbiAgICByZXR1cm4gdGhpcy50aW1lU3RyaW5nKHRoaXMudHJhY2suY3VycmVudFRpbWUpO1xuICB9XG5cbiAgYXVkaW9QbGF5ZXIucHJvdG90eXBlLmR1cmF0aW9uU3RyaW5nID0gZnVuY3Rpb24oKXtcbiAgICByZXR1cm4gdGhpcy50aW1lU3RyaW5nKHRoaXMudHJhY2suZHVyYXRpb24pO1xuICB9XG5cbiAgLy8gUmV0dXJucyBhIHRpbWUgbGlrZSBNTTpTU1xuICBhdWRpb1BsYXllci5wcm90b3R5cGUudGltZVN0cmluZyA9IGZ1bmN0aW9uKHRpbWUpe1xuXG4gICAgaWYoaXNOYU4odGltZSkpXG4gICAgeyAvL2VlaywgdHJ5IGFnYWluLiBIYXJkIHRvIHJlcHJvZHVjZVxuICAgICAgaWYoaXNOYU4odGhpcy50cmFjay5kdXJhdGlvbikpe1xuICAgICAgICByZXR1cm4gJyc7XG4gICAgICB9ZWxzZSB7XG4gICAgICAgIHRoaXMudHJhY2suZHVyYXRpb247XG4gICAgICB9XG4gICAgfVxuXG4gICAgdmFyIHNlY29uZHMgPSBcIjBcIiArIE1hdGgucm91bmQodGltZSU2MCk7XG4gICAgc2Vjb25kcyA9IHNlY29uZHMuc3Vic3RyKHNlY29uZHMubGVuZ3RoLTIpO1xuXG4gICAgcmV0dXJuICBNYXRoLnJvdW5kKHRpbWUvNjApKyc6JytzZWNvbmRzO1xuICB9XG5cbiAgLy8gUGxheSBpZiBwYXVzZWQsIHBhdXNlIGlmIHBsYXlpbmdcbiAgYXVkaW9QbGF5ZXIucHJvdG90eXBlLnRvZ2dsZVBsYXlQYXVzZSA9IGZ1bmN0aW9uKCl7XG4gICAgdGhpcy5pc1BhdXNlZCgpID8gdGhpcy5wbGF5VHJhY2soKSA6IHRoaXMucGF1c2VUcmFjaygpO1xuICB9XG5cbiAgYXVkaW9QbGF5ZXIucHJvdG90eXBlLnNlZWsgPSBmdW5jdGlvbihldmVudCl7XG5cbiAgICB2YXIgcGxheVBlcmNlbnRhZ2UgPSBldmVudC5vZmZzZXRYIC8gJChldmVudC50YXJnZXQpLndpZHRoKCk7XG4gICAgdGhpcy50cmFjay5jdXJyZW50VGltZSA9IHBsYXlQZXJjZW50YWdlICogdGhpcy50cmFjay5kdXJhdGlvbjtcbiAgICB0aGlzLnVwZGF0ZVByb2dyZXNzQmFyKCk7XG4gIH0gIFxuXG4gICQoJ2JvZHknKS5vbignY2xpY2snLCAnLnBsYXktcGF1c2UnLCBmdW5jdGlvbigpe1xuICAgIHZhciBwbGF5ZXIgPSBuZXcgYXVkaW9QbGF5ZXIoJCh0aGlzKS5jbG9zZXN0KCcuYXVkaW8tcGxheWVyJykuZXEoMCkpO1xuICAgIHBsYXllci50b2dnbGVQbGF5UGF1c2UoKTtcbiAgfSk7XG5cbiAgJCgnYm9keScpLm9uKCdjbGljaycsICcucHJvZ3Jlc3MtYmFyJywgZnVuY3Rpb24oZXZlbnQpe1xuICAgIHZhciBwbGF5ZXIgPSBuZXcgYXVkaW9QbGF5ZXIoJCh0aGlzKS5jbG9zZXN0KCcuYXVkaW8tcGxheWVyJykuZXEoMCkpO1xuICAgIHBsYXllci5zZWVrKGV2ZW50KTtcbiAgfSk7XG5cbiAgLy9zZW5kIGdvb2dsZS1hbmFseXRpY3Mgc3RhdHMgZm9yIGEgbWl4IGRvd25sb2FkXG4gICQoJ2JvZHknKS5vbignY2xpY2snLCAnLmRvd25sb2FkJywgZnVuY3Rpb24oZXZlbnQpe1xuICAgIGdhKCdzZW5kJywgJ2V2ZW50JywgJ01peCcsICdkb3dubG9hZCcsIFxuICAgICAgJCh0aGlzKS5jbG9zZXN0KCcuYXVkaW8tcGxheWVyJykuYXR0cignaWQnKSwgXG4gICAgICAkKHRoaXMpLmNsb3Nlc3QoJy5hdWRpby1wbGF5ZXInKS5kYXRhKCdyYXRpbmcnKSk7XG4gIH0pO1xuXG59KTsgIiwiICBcbi8qIFxuICBBbmltYXRlIHJhdGluZ3MgYmFyIGJ5IGNoYW5naW5nIG9wYWNpdHkgb2Ygc2V2ZXJhbCBibG9ja3NcbiAgKi9cbiQoZnVuY3Rpb24oKXtcbiAgXG4gIC8vICA2MHMvMTI1YnBtID0gNDgwbXNcbiAgdmFyIEFOSU1BVElPTl9QRVJJT0QgPSAoNjAuMC8xMjUpKjEwMDA7XG4gIHZhciBERUZBVUxUX09QQUNJVFkgPSAnMC40JztcbiAgdmFyIElOQ1JFQVNFRF9PUEFDSVRZID0gJzAuNSc7XG4gIHZhciAkcmF0aW5nX2Jsb2NrcyA9ICQoJy5ib3R0b20tYmFyIC5yYXRpbmctYmxvY2snKTtcbiAgdmFyIG51bV9yYXRpbmdzID0gJHJhdGluZ19ibG9ja3MubGVuZ3RoO1xuICB2YXIgb3JpZ2luYWxfYmxvY2tfaGVpZ2h0ID0gJHJhdGluZ19ibG9ja3MuZXEoMCkuaGVpZ2h0KCk7XG5cbiAgaWYobnVtX3JhdGluZ3MgPT09IDApe1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8vIEV2ZXJ5IHggbXMsIGRvLi4uXG4gIC8vICByZXNldCBhbGwgb3BhY2l0aWVzXG4gIC8vICBjaG9vc2UgeCByYW5kb20gcmF0aW5nIGJsb2NrcyB0byBkYXJrZW5cbiAgLy8gIGNob29zZSBhIHJhbmRvbSBibG9jayBmcm9tIHRoYXQgZ3JvdXAgdG8gZGFya2VuLCBvdmVybGFwIG9rXG4gIC8vIHNldEludGVydmFsKGZ1bmN0aW9uKCkge1xuICBzZXRJbnRlcnZhbCgoKSA9PiB7XG5cbiAgICAvL2VhY2ggdGltZSwgYSBkaWZmZXJlbnQgbnVtYmVyIG9mIGJsb2NrcyBhcmUgY2hvc2VuXG4gICAgdmFyIGJsb2Nrc190b19ibGFuayA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSpudW1fcmF0aW5ncykrMTtcbiAgICBcbiAgICAkcmF0aW5nX2Jsb2Nrcy5ub3QoJy5hY3RpdmUnKS5jc3MoJ29wYWNpdHknLCBERUZBVUxUX09QQUNJVFkpO1xuICAgICAgICAgICAgICAgICAgLy8gLmNzcygnaGVpZ2h0Jywgb3JpZ2luYWxfYmxvY2tfaGVpZ2h0KydweCcpO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBibG9ja3NfdG9fYmxhbms7IGkrKykge1xuICAgICAgdmFyIHJhbmRfYmxvY2tfaW5kZXggPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkqbnVtX3JhdGluZ3MpKzE7XG5cbiAgICAgIGlmKCEkcmF0aW5nX2Jsb2Nrcy5lcShyYW5kX2Jsb2NrX2luZGV4KS5oYXNDbGFzcygnYWN0aXZlJykpe1xuICAgICAgICAkcmF0aW5nX2Jsb2Nrcy5lcShyYW5kX2Jsb2NrX2luZGV4KVxuICAgICAgICAgICAgICAgICAgICAgIC5jc3MoJ29wYWNpdHknLCBJTkNSRUFTRURfT1BBQ0lUWSk7XG4gICAgICB9XG4gICAgfVxuICB9LCBBTklNQVRJT05fUEVSSU9EKTtcblxuXG4gIC8vIGNvbnRyb2wgc2hvd2luZyBWLXJhdGluZyBkZXNjcmlwdGlvbnMgb24gaG92ZXIgb2YgVi1jb2xvciBidXR0b25cbiAgJCgnLmJvdHRvbS1iYXIgPiBkaXYnKS5vbignY2xpY2snLCBmdW5jdGlvbigpe1xuICAgIHZhciByYXRpbmcgPSAkKHRoaXMpLmZpbmQoJy5yYXRpbmctYmxvY2snKS5kYXRhKCdyYXRpbmcnKTtcbiAgICBzaG93QW5kSGlnaGxpZ2h0UmF0aW5nKHJhdGluZyk7XG4gIH0pO1xuXG5cbiAgZnVuY3Rpb24gc2hvd0FuZEhpZ2hsaWdodFJhdGluZyhyYXRpbmcpe1xuICAgIFxuICAgIC8vaGlkZSBhbGwgb3RoZXIgZGVzY3JpcHRpb25zXG4gICAgJCgnLnYtZGVzY3JpcHRpb25zID4gcCcpXG4gICAgICAubm90KCcudi1kZXNjcmlwdGlvbnMgPiBwW2RhdGEtcmF0aW5nPVwiJytyYXRpbmcrJ1wiXScpXG4gICAgICAuaGlkZSgpO1xuXG4gICAgLy9yZW1vdmUgb3RoZXIgYWN0aXZlIG9wYWNpdGllc1xuICAgICQoJy5ib3R0b20tYmFyID4gZGl2IC5yYXRpbmctYmxvY2snKVxuICAgICAgLm5vdCgnLmJvdHRvbS1iYXIgPiBkaXYgLnJhdGluZy1ibG9ja1tkYXRhLXJhdGluZz1cIicrcmF0aW5nKydcIl0nKVxuICAgICAgLmNzcygnb3BhY2l0eScsIERFRkFVTFRfT1BBQ0lUWSlcbiAgICAgIC5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XG5cbiAgICAkKCcuYm90dG9tLWJhciA+IGRpdiAucmF0aW5nLWJsb2NrW2RhdGEtcmF0aW5nPVwiJytyYXRpbmcrJ1wiXScpXG4gICAgICAuY3NzKCdvcGFjaXR5JywgMSlcbiAgICAgIC5hZGRDbGFzcygnYWN0aXZlJyk7XG5cbiAgICAkKCcudi1kZXNjcmlwdGlvbnMgPiBwW2RhdGEtcmF0aW5nPVwiJytyYXRpbmcrJ1wiXScpLnNob3coKTtcbiAgfVxufSk7XG5cblxuJChmdW5jdGlvbigpe1xuXG4gIC8vZ2V0IHRoZSBzdHViIGZyb20gdGhlIHVybCwgbGlrZSBkam1vdW50YWlub3VzLmNvbT9ibHVlcHJpbnQtMTktd2FybXVwXG4gIHZhciBzZWFyY2ggPSB3aW5kb3cubG9jYXRpb24uc2VhcmNoLnJlcGxhY2UoXCI/XCIsIFwiXCIpO1xuIFxuICAvL3Njcm9sbCB0aGF0IGVsZW1lbnQncyB0b3AgIFxuICAvLyBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7IFxuXG4gIC8vICAgLy8gJCgnaHRtbCwgYm9keScpLnNjcm9sbFRvcCgkKCcuJytzZWFyY2gpLm9mZnNldCgpLnRvcC0zMDApO1xuICAvLyAgIC8vICQoJy5taXgnKS5ub3QoJy4nK3NlYXJjaCkuY3NzKCdvcGFjaXR5JywgMC42KTtcbiAgLy8gICAvLyAkKCcubWl4LWdyb3VwX190aXRsZSwgLmdyb3VwLWRlc2NyaXB0aW9uJykuY3NzKCdvcGFjaXR5JywgMC42KTtcbiAgLy8gfSwgMTgwMCk7IFxuXG4gIC8vd2hlbiBhbnl0aGluZyBpcyBjbGlja2VkLCBzZXQgdGhlIG9wYWNpdHkgb2YgdGhlIG1peGVzIGJhY2sgdG8gMVxuICAkKCcqJykub24oJ2NsaWNrJywgKCkgPT4ge1xuICAgICQoJy5taXgnKS5jc3MoJ29wYWNpdHknLCAxKTtcbiAgfSk7IFxuICAgIFxuICAkKCcjbWl4ZXMnKS5vbignY2xpY2snLCAnLm1peF9fZGV0YWlscyAucmF0aW5nJywgZnVuY3Rpb24oKXtcbiAgICAkKCcucmF0aW5nLWJsb2NrW2RhdGEtcmF0aW5nPVwiJyskKHRoaXMpLmRhdGEoJ3JhdGluZycpKydcIl0nKS5jbG9zZXN0KCdkaXYnKS50cmlnZ2VyKCdob3ZlcicpO1xuICAgICQoJy5yYXRpbmctYmxvY2tbZGF0YS1yYXRpbmc9XCInKyQodGhpcykuZGF0YSgncmF0aW5nJykrJ1wiXScpLmNsb3Nlc3QoJ2RpdicpLnRyaWdnZXIoJ2NsaWNrJyk7XG4gICAgJCgnaHRtbCwgYm9keScpLnNjcm9sbFRvcCgkKCcuYm90dG9tLWJhcicpLm9mZnNldCgpLnRvcC0xMzApO1xuICB9KTtcbiAgXG59KTsgICIsIiQoZnVuY3Rpb24gICgpIHtcblxuICAvLyBtaXhlcyBNVVNUIGJlIG5hbWVkIGRqLW1vdXRhaW5vdXMte3NsdWd9LihtcDMvbTRhKVxuICAvLyBpLmUuIGRqLW1vdW50YWlub3VzLXZhLXRlY2gtaG91c2VcblxuICB2YXIgY2FsbV9taXhlcyA9IHtcbiAgICBtaXhlczogW1xuICAgICAgLy9uZXcgbWl4IGdvZXMgaGVyZVxuICAgICAge1xuICAgICAgICB0aXRsZTogXCJUaGUgRWlnZXJcIixcbiAgICAgICAgZ2VucmVzOiBcIlRlY2ggSG91c2VcIixcbiAgICAgICAgZGF0ZTogXCJTZXB0IDIwMTZcIixcbiAgICAgICAgc2x1ZzogXCJ2YS10ZWNoLWhvdXNlXCIsXG4gICAgICAgIHJhdGluZzogM1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgdGl0bGU6IFwiR2FyaWJhbGRpXCIsXG4gICAgICAgIGdlbnJlczogXCJEZWVwIEhvdXNlXCIsXG4gICAgICAgIGRhdGU6IFwiSnVuZSAyMDE2XCIsXG4gICAgICAgIHNsdWc6IFwidmEtZGVlcC1ob3VzZS12MlwiLFxuICAgICAgICByYXRpbmc6IDJcbiAgICAgIH0sXG4gICAgXVxuICB9O1xuXG4gIHZhciBpbnRlbnNlX21peGVzID0ge1xuICAgIG1peGVzOiBbXG4gICAgICAvL25ldyBtaXggZ29lcyBoZXJlXG4gICAgICB7XG4gICAgICAgIHRpdGxlOiBcIkJsdWVwcmludCAxOXRoIFdhcm11cFwiLFxuICAgICAgICBnZW5yZXM6IFwiUmV6eiBHcml6IEdyaW1lIFcuUy5OIERGcmFuY2lzXCIsXG4gICAgICAgIGRhdGU6IFwiT2N0b2JlciAyMDE2XCIsXG4gICAgICAgIHNsdWc6IFwiYmx1ZXByaW50LTE5LXdhcm11cFwiLFxuICAgICAgICByYXRpbmc6IDlcbiAgICAgIH0se1xuICAgICAgICB0aXRsZTogXCJMaXZlIEAgQmlydGhSYXZlIDIwMTZcIixcbiAgICAgICAgZ2VucmVzOiBcIkJhc3MgRnVuaywgVHJhcCwgRHViXCIsXG4gICAgICAgIGRhdGU6IFwiU2VwdCAyNCwgMjAxNlwiLFxuICAgICAgICBzbHVnOiBcImxpdmUtYmlydGhyYXZlLTIwMTYtYmFzcy1mdW5rLWR1YlwiLFxuICAgICAgICByYXRpbmc6IDhcbiAgICAgIH0seyBcbiAgICAgICAgdGl0bGU6IFwiQmxhY2sgVHVza1wiLFxuICAgICAgICBnZW5yZXM6IFwiVHJhcCAmIER1YnN0ZXBcIixcbiAgICAgICAgZGF0ZTogXCJBdWd1c3QgMjAxNlwiLFxuICAgICAgICBzbHVnOiBcInZhLWR1YnRyYXBcIixcbiAgICAgICAgcmF0aW5nOiA5XG4gICAgICB9LHtcbiAgICAgICAgdGl0bGU6IFwiU2V2ZW4gTGlvbnMgd2FybXVwXCIsXG4gICAgICAgIGdlbnJlczogXCJEcmVhbXN0ZXBcIixcbiAgICAgICAgZGF0ZTogXCJPY3RvYmVyIDIwMTZcIixcbiAgICAgICAgc2x1ZzogXCJzZXZlbi1saW9ucy13YXJtLXVwLW1peFwiLFxuICAgICAgICByYXRpbmc6IDdcbiAgICAgIH1cbiAgICBdXG4gIH07Ly8gaW50ZW5zZSBtaXhlc1xuXG4gIC8vIC8vaW5qZWN0IGhhbmRsZWJhcnMgdGVtcGxhdGVzIHdpdGggbWl4IGRhdGFcbiAgaW5qZWN0VGVtcGxhdGVzKGludGVuc2VfbWl4ZXMsICAnaW50ZW5zZScpOyBcbiAgaW5qZWN0VGVtcGxhdGVzKGNhbG1fbWl4ZXMsICAgICAnY2FsbScpO1xuICBcbiAgZnVuY3Rpb24gaW5qZWN0VGVtcGxhdGVzKGRhdGEsIHR5cGUpe1xuXG4gICAgdmFyIGh0bWwgPSBNeUFwcC50ZW1wbGF0ZXMubWl4ZXMoZGF0YSk7XG4gICAgJCgnI21peGVzLXRtcGwtJyt0eXBlKS5odG1sKGh0bWwpO1xuICB9ICBcblxuXG59KTtcbiAgXG5cbiAiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
