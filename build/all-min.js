/*!
 * DJ Mountainous - Dj Mountainous v1.1.1 (djmountainous.com)
 * Copyright 2016-2016 Corey Sanford
 */
function collapseNavbar(){$(".navbar").offset().top>$("#waves").offset().top-150?$(".navbar-fixed-top").addClass("top-nav-collapse"):$(".navbar-fixed-top").removeClass("top-nav-collapse")}var CirclePlayer=function(t,e,s){var i=this,a={supplied:"m4a, oga",cssSelectorAncestor:"#cp_container_1",cssSelector:{play:".cp-play",pause:".cp-pause"}},r={bufferHolder:".cp-buffer-holder",buffer1:".cp-buffer-1",buffer2:".cp-buffer-2",progressHolder:".cp-progress-holder",progress1:".cp-progress-1",progress2:".cp-progress-2",circleControl:".cp-circle-control"};this.cssClass={gt50:"cp-gt50",fallback:"cp-fallback"},this.spritePitch=104,this.spriteRatio=.24,this.player=$(t),this.media=$.extend({},e),this.options=$.extend(!0,{},a,s),this.cssTransforms=Modernizr.csstransforms,this.cssTransforms=null,this.audio={},this.dragging=!1,this.eventNamespace=".CirclePlayer",this.jq={},$.each(r,function(t,e){i.jq[t]=$(i.options.cssSelectorAncestor+" "+e)}),this._initSolution(),this._initPlayer()};CirclePlayer.prototype={_createHtml:function(){},_initPlayer:function(){var t=this;this.player.jPlayer(this.options),this.player.bind($.jPlayer.event.ready+this.eventNamespace,function(e){e.jPlayer.html.used&&e.jPlayer.html.audio.available&&(t.audio=$(this).data("jPlayer").htmlElement.audio),$(this).jPlayer("setMedia",t.media),t._initCircleControl()}),this.player.bind($.jPlayer.event.play+this.eventNamespace,function(t){$(this).jPlayer("pauseOthers")}),this.player.bind($.jPlayer.event.timeupdate+this.eventNamespace,function(e){t.dragging||t._timeupdate(e.jPlayer.status.currentPercentAbsolute)}),this.player.bind($.jPlayer.event.progress+this.eventNamespace,function(e){var s=0;if("object"==typeof t.audio.buffered&&t.audio.buffered.length>0){if(t.audio.duration>0){for(var i=0,a=0;a<t.audio.buffered.length;a++)i+=t.audio.buffered.end(a)-t.audio.buffered.start(a);s=100*i/t.audio.duration}}else s=0;t._progress(s)}),this.player.bind($.jPlayer.event.ended+this.eventNamespace,function(e){t._resetSolution()})},_initSolution:function(){this.cssTransforms?(this.jq.progressHolder.show(),this.jq.bufferHolder.show()):(this.jq.progressHolder.addClass(this.cssClass.gt50).show(),this.jq.progress1.addClass(this.cssClass.fallback),this.jq.progress2.hide(),this.jq.bufferHolder.hide()),this._resetSolution()},_resetSolution:function(){this.cssTransforms?(this.jq.progressHolder.removeClass(this.cssClass.gt50),this.jq.progress1.css({transform:"rotate(0deg)"}),this.jq.progress2.css({transform:"rotate(0deg)"}).hide()):this.jq.progress1.css("background-position","0 "+this.spritePitch+"px")},_initCircleControl:function(){var t=this;this.jq.circleControl.grab({onstart:function(){t.dragging=!0},onmove:function(e){var s=t._getArcPercent(e.position.x,e.position.y);t.player.jPlayer("playHead",s).jPlayer("play"),t._timeupdate(s)},onfinish:function(e){t.dragging=!1;var s=t._getArcPercent(e.position.x,e.position.y);t.player.jPlayer("playHead",s).jPlayer("play")}})},_timeupdate:function(t){var e=3.6*t+"deg",s=(Math.floor(Math.round(t)*this.spriteRatio)-1)*-this.spritePitch;t<=50?this.cssTransforms?(this.jq.progressHolder.removeClass(this.cssClass.gt50),this.jq.progress1.css({transform:"rotate("+e+")"}),this.jq.progress2.hide()):this.jq.progress1.css("background-position","0 "+s+"px"):t<=100&&(this.cssTransforms?(this.jq.progressHolder.addClass(this.cssClass.gt50),this.jq.progress1.css({transform:"rotate(180deg)"}),this.jq.progress2.css({transform:"rotate("+e+")"}),this.jq.progress2.show()):this.jq.progress1.css("background-position","0 "+s+"px"))},_progress:function(t){var e=3.6*t+"deg";this.cssTransforms&&(t<=50?(this.jq.bufferHolder.removeClass(this.cssClass.gt50),this.jq.buffer1.css({transform:"rotate("+e+")"}),this.jq.buffer2.hide()):t<=100&&(this.jq.bufferHolder.addClass(this.cssClass.gt50),this.jq.buffer1.css({transform:"rotate(180deg)"}),this.jq.buffer2.show(),this.jq.buffer2.css({transform:"rotate("+e+")"})))},_getArcPercent:function(t,e){var s=this.jq.circleControl.offset(),i=t-s.left-this.jq.circleControl.width()/2,a=e-s.top-this.jq.circleControl.height()/2,r=Math.atan2(a,i);return r>-1*Math.PI&&r<-.5*Math.PI&&(r=2*Math.PI+r),(r+Math.PI/2)/2*Math.PI*10},setMedia:function(t){this.media=$.extend({},t),this.player.jPlayer("setMedia",this.media)},play:function(t){this.player.jPlayer("play",t)},pause:function(t){this.player.jPlayer("pause",t)},destroy:function(){this.player.unbind(this.eventNamespace),this.player.jPlayer("destroy")}},function(t){function e(e,i,a){if("touch"!==i.substr(0,5))return t(e).unbind(i,a);var r;for(r=0;r<s._binds.length;r++)s._binds[r].elem===e&&s._binds[r].type===i&&s._binds[r].func===a&&(document.addEventListener?e.removeEventListener(i,s._binds[r].fnc,!1):e.detachEvent("on"+i,s._binds[r].fnc),s._binds.splice(r--,1))}function s(e,i,a,r){if("touch"!==i.substr(0,5))return t(e).bind(i,r,a);var n;return s[i]?s[i].bind(e,i,a,r):(n=function(t){t||(t=window.event),t.stopPropagation||(t.stopPropagation=function(){this.cancelBubble=!0}),t.data=r,a.call(e,t)},document.addEventListener?e.addEventListener(i,n,!1):e.attachEvent("on"+i,n),void s._binds.push({elem:e,type:i,func:a,fnc:n}))}function i(t,e){var i={move:{x:0,y:0},offset:{x:0,y:0},position:{x:0,y:0},start:{x:0,y:0},affects:document.documentElement,stopPropagation:!1,preventDefault:!0,touch:!0};c(i,e),i.element=t,s(t,d,r,i),i.touch&&s(t,f,l,i)}function a(t){e(t,d,d)}function r(t){t.data.position.x=t.pageX,t.data.position.y=t.pageY,t.data.start.x=t.pageX,t.data.start.y=t.pageY,t.data.event=t,t.data.onstart&&t.data.onstart.call(t.data.element,t.data)||(t.preventDefault&&t.data.preventDefault&&t.preventDefault(),t.stopPropagation&&t.data.stopPropagation&&t.stopPropagation(),s(t.data.affects,p,n,t.data),s(t.data.affects,m,o,t.data))}function n(t){t.preventDefault&&t.data.preventDefault&&t.preventDefault(),t.stopPropagation&&t.data.preventDefault&&t.stopPropagation(),t.data.move.x=t.pageX-t.data.position.x,t.data.move.y=t.pageY-t.data.position.y,t.data.position.x=t.pageX,t.data.position.y=t.pageY,t.data.offset.x=t.pageX-t.data.start.x,t.data.offset.y=t.pageY-t.data.start.y,t.data.event=t,t.data.onmove&&t.data.onmove.call(t.data.element,t.data)}function o(t){t.preventDefault&&t.data.preventDefault&&t.preventDefault(),t.stopPropagation&&t.data.stopPropagation&&t.stopPropagation(),e(t.data.affects,p,n),e(t.data.affects,m,o),t.data.event=t,t.data.onfinish&&t.data.onfinish.call(t.data.element,t.data)}function l(t){t.data.position.x=t.touches[0].pageX,t.data.position.y=t.touches[0].pageY,t.data.start.x=t.touches[0].pageX,t.data.start.y=t.touches[0].pageY,t.data.event=t,t.data.onstart&&t.data.onstart.call(t.data.element,t.data)||(t.preventDefault&&t.data.preventDefault&&t.preventDefault(),t.stopPropagation&&t.data.stopPropagation&&t.stopPropagation(),s(t.data.affects,v,h,t.data),s(t.data.affects,g,u,t.data))}function h(t){t.preventDefault&&t.data.preventDefault&&t.preventDefault(),t.stopPropagation&&t.data.stopPropagation&&t.stopPropagation(),t.data.move.x=t.touches[0].pageX-t.data.position.x,t.data.move.y=t.touches[0].pageY-t.data.position.y,t.data.position.x=t.touches[0].pageX,t.data.position.y=t.touches[0].pageY,t.data.offset.x=t.touches[0].pageX-t.data.start.x,t.data.offset.y=t.touches[0].pageY-t.data.start.y,t.data.event=t,t.data.onmove&&t.data.onmove.call(t.data.elem,t.data)}function u(t){t.preventDefault&&t.data.preventDefault&&t.preventDefault(),t.stopPropagation&&t.data.stopPropagation&&t.stopPropagation(),e(t.data.affects,v,h),e(t.data.affects,g,u),t.data.event=t,t.data.onfinish&&t.data.onfinish.call(t.data.element,t.data)}var c=t.extend,d="mousedown",p="mousemove",m="mouseup",f="touchstart",v="touchmove",g="touchend";s._binds=[],t.fn.grab=function(t,e){return this.each(function(){return i(this,t,e)})},t.fn.ungrab=function(t){return this.each(function(){return a(this,t)})}}(jQuery),function(t,e){t.fn.jPlayer=function(s){var i="jPlayer",a="string"==typeof s,r=Array.prototype.slice.call(arguments,1),n=this;return s=!a&&r.length?t.extend.apply(null,[!0,s].concat(r)):s,a&&"_"===s.charAt(0)?n:(a?this.each(function(){var a=t.data(this,i),o=a&&t.isFunction(a[s])?a[s].apply(a,r):a;if(o!==a&&o!==e)return n=o,!1}):this.each(function(){var e=t.data(this,i);e?e.option(s||{}):t.data(this,i,new t.jPlayer(s,this))}),n)},t.jPlayer=function(e,s){if(arguments.length){this.element=t(s),this.options=t.extend(!0,{},this.options,e);var i=this;this.element.bind("remove.jPlayer",function(){i.destroy()}),this._init()}},t.jPlayer.emulateMethods="load play pause",t.jPlayer.emulateStatus="src readyState networkState currentTime duration paused ended playbackRate",t.jPlayer.emulateOptions="muted volume",t.jPlayer.reservedEvent="ready flashreset resize repeat error warning",t.jPlayer.event={ready:"jPlayer_ready",flashreset:"jPlayer_flashreset",resize:"jPlayer_resize",repeat:"jPlayer_repeat",click:"jPlayer_click",error:"jPlayer_error",warning:"jPlayer_warning",loadstart:"jPlayer_loadstart",progress:"jPlayer_progress",suspend:"jPlayer_suspend",abort:"jPlayer_abort",emptied:"jPlayer_emptied",stalled:"jPlayer_stalled",play:"jPlayer_play",pause:"jPlayer_pause",loadedmetadata:"jPlayer_loadedmetadata",loadeddata:"jPlayer_loadeddata",waiting:"jPlayer_waiting",playing:"jPlayer_playing",canplay:"jPlayer_canplay",canplaythrough:"jPlayer_canplaythrough",seeking:"jPlayer_seeking",seeked:"jPlayer_seeked",timeupdate:"jPlayer_timeupdate",ended:"jPlayer_ended",ratechange:"jPlayer_ratechange",durationchange:"jPlayer_durationchange",volumechange:"jPlayer_volumechange"},t.jPlayer.htmlEvent=["loadstart","abort","emptied","stalled","loadedmetadata","loadeddata","canplay","canplaythrough","ratechange"],t.jPlayer.pause=function(){t.each(t.jPlayer.prototype.instances,function(t,e){e.data("jPlayer").status.srcSet&&e.jPlayer("pause")})},t.jPlayer.timeFormat={showHour:!1,showMin:!0,showSec:!0,padHour:!1,padMin:!0,padSec:!0,sepHour:":",sepMin:":",sepSec:""},t.jPlayer.convertTime=function(e){var s=new Date(1e3*e),i=s.getUTCHours(),a=s.getUTCMinutes(),r=s.getUTCSeconds(),n=t.jPlayer.timeFormat.padHour&&i<10?"0"+i:i,o=t.jPlayer.timeFormat.padMin&&a<10?"0"+a:a,l=t.jPlayer.timeFormat.padSec&&r<10?"0"+r:r;return(t.jPlayer.timeFormat.showHour?n+t.jPlayer.timeFormat.sepHour:"")+(t.jPlayer.timeFormat.showMin?o+t.jPlayer.timeFormat.sepMin:"")+(t.jPlayer.timeFormat.showSec?l+t.jPlayer.timeFormat.sepSec:"")},t.jPlayer.uaBrowser=function(t){var e=t.toLowerCase(),s=/(webkit)[ \/]([\w.]+)/,i=/(opera)(?:.*version)?[ \/]([\w.]+)/,a=/(msie) ([\w.]+)/,r=/(mozilla)(?:.*? rv:([\w.]+))?/,n=s.exec(e)||i.exec(e)||a.exec(e)||e.indexOf("compatible")<0&&r.exec(e)||[];return{browser:n[1]||"",version:n[2]||"0"}},t.jPlayer.uaPlatform=function(t){var e=t.toLowerCase(),s=/(ipad|iphone|ipod|android|blackberry|playbook|windows ce|webos)/,i=/(ipad|playbook)/,a=/(android)/,r=/(mobile)/,n=s.exec(e)||[],o=i.exec(e)||!r.exec(e)&&a.exec(e)||[];return n[1]&&(n[1]=n[1].replace(/\s/g,"_")),{platform:n[1]||"",tablet:o[1]||""}},t.jPlayer.browser={},t.jPlayer.platform={};var s=t.jPlayer.uaBrowser(navigator.userAgent);s.browser&&(t.jPlayer.browser[s.browser]=!0,t.jPlayer.browser.version=s.version);var i=t.jPlayer.uaPlatform(navigator.userAgent);i.platform&&(t.jPlayer.platform[i.platform]=!0,t.jPlayer.platform.mobile=!i.tablet,t.jPlayer.platform.tablet=!!i.tablet),t.jPlayer.prototype={count:0,version:{script:"2.2.0",needFlash:"2.2.0",flash:"unknown"},options:{swfPath:"js",solution:"html, flash",supplied:"mp3",preload:"metadata",volume:.8,muted:!1,wmode:"opaque",backgroundColor:"#000000",cssSelectorAncestor:"#jp_container_1",cssSelector:{videoPlay:".jp-video-play",play:".jp-play",pause:".jp-pause",stop:".jp-stop",seekBar:".jp-seek-bar",playBar:".jp-play-bar",mute:".jp-mute",unmute:".jp-unmute",volumeBar:".jp-volume-bar",volumeBarValue:".jp-volume-bar-value",volumeMax:".jp-volume-max",currentTime:".jp-current-time",duration:".jp-duration",fullScreen:".jp-full-screen",restoreScreen:".jp-restore-screen",repeat:".jp-repeat",repeatOff:".jp-repeat-off",gui:".jp-gui",noSolution:".jp-no-solution"},fullScreen:!1,autohide:{restored:!1,full:!0,fadeIn:200,fadeOut:600,hold:1e3},loop:!1,repeat:function(e){e.jPlayer.options.loop?t(this).unbind(".jPlayerRepeat").bind(t.jPlayer.event.ended+".jPlayer.jPlayerRepeat",function(){t(this).jPlayer("play")}):t(this).unbind(".jPlayerRepeat")},nativeVideoControls:{},noFullScreen:{msie:/msie [0-6]/,ipad:/ipad.*?os [0-4]/,iphone:/iphone/,ipod:/ipod/,android_pad:/android [0-3](?!.*?mobile)/,android_phone:/android.*?mobile/,blackberry:/blackberry/,windows_ce:/windows ce/,webos:/webos/},noVolume:{ipad:/ipad/,iphone:/iphone/,ipod:/ipod/,android_pad:/android(?!.*?mobile)/,android_phone:/android.*?mobile/,blackberry:/blackberry/,windows_ce:/windows ce/,webos:/webos/,playbook:/playbook/},verticalVolume:!1,idPrefix:"jp",noConflict:"jQuery",emulateHtml:!1,errorAlerts:!1,warningAlerts:!1},optionsAudio:{size:{width:"0px",height:"0px",cssClass:""},sizeFull:{width:"0px",height:"0px",cssClass:""}},optionsVideo:{size:{width:"480px",height:"270px",cssClass:"jp-video-270p"},sizeFull:{width:"100%",height:"100%",cssClass:"jp-video-full"}},instances:{},status:{src:"",media:{},paused:!0,format:{},formatType:"",waitForPlay:!0,waitForLoad:!0,srcSet:!1,video:!1,seekPercent:0,currentPercentRelative:0,currentPercentAbsolute:0,currentTime:0,duration:0,readyState:0,networkState:0,playbackRate:1,ended:0},internal:{ready:!1},solution:{html:!0,flash:!0},format:{mp3:{codec:'audio/mpeg; codecs="mp3"',flashCanPlay:!0,media:"audio"},m4a:{codec:'audio/mp4; codecs="mp4a.40.2"',flashCanPlay:!0,media:"audio"},oga:{codec:'audio/ogg; codecs="vorbis"',flashCanPlay:!1,media:"audio"},wav:{codec:'audio/wav; codecs="1"',flashCanPlay:!1,media:"audio"},webma:{codec:'audio/webm; codecs="vorbis"',flashCanPlay:!1,media:"audio"},fla:{codec:"audio/x-flv",flashCanPlay:!0,media:"audio"},rtmpa:{codec:'audio/rtmp; codecs="rtmp"',flashCanPlay:!0,media:"audio"},m4v:{codec:'video/mp4; codecs="avc1.42E01E, mp4a.40.2"',flashCanPlay:!0,media:"video"},ogv:{codec:'video/ogg; codecs="theora, vorbis"',flashCanPlay:!1,media:"video"},webmv:{codec:'video/webm; codecs="vorbis, vp8"',flashCanPlay:!1,media:"video"},flv:{codec:"video/x-flv",flashCanPlay:!0,media:"video"},rtmpv:{codec:'video/rtmp; codecs="rtmp"',flashCanPlay:!0,media:"video"}},_init:function(){var s=this;if(this.element.empty(),this.status=t.extend({},this.status),this.internal=t.extend({},this.internal),this.internal.domNode=this.element.get(0),this.formats=[],this.solutions=[],this.require={},this.htmlElement={},this.html={},this.html.audio={},this.html.video={},this.flash={},this.css={},this.css.cs={},this.css.jq={},this.ancestorJq=[],this.options.volume=this._limitValue(this.options.volume,0,1),t.each(this.options.supplied.toLowerCase().split(","),function(e,i){var a=i.replace(/^\s+|\s+$/g,"");if(s.format[a]){var r=!1;t.each(s.formats,function(t,e){if(a===e)return r=!0,!1}),r||s.formats.push(a)}}),t.each(this.options.solution.toLowerCase().split(","),function(e,i){var a=i.replace(/^\s+|\s+$/g,"");if(s.solution[a]){var r=!1;t.each(s.solutions,function(t,e){if(a===e)return r=!0,!1}),r||s.solutions.push(a)}}),this.internal.instance="jp_"+this.count,this.instances[this.internal.instance]=this.element,this.element.attr("id")||this.element.attr("id",this.options.idPrefix+"_jplayer_"+this.count),this.internal.self=t.extend({},{id:this.element.attr("id"),jq:this.element}),this.internal.audio=t.extend({},{id:this.options.idPrefix+"_audio_"+this.count,jq:e}),this.internal.video=t.extend({},{id:this.options.idPrefix+"_video_"+this.count,jq:e}),this.internal.flash=t.extend({},{id:this.options.idPrefix+"_flash_"+this.count,jq:e,swf:this.options.swfPath+(".swf"!==this.options.swfPath.toLowerCase().slice(-4)?(this.options.swfPath&&"/"!==this.options.swfPath.slice(-1)?"/":"")+"Jplayer.swf":"")}),this.internal.poster=t.extend({},{id:this.options.idPrefix+"_poster_"+this.count,jq:e}),t.each(t.jPlayer.event,function(t,i){s.options[t]!==e&&(s.element.bind(i+".jPlayer",s.options[t]),s.options[t]=e)}),this.require.audio=!1,this.require.video=!1,t.each(this.formats,function(t,e){s.require[s.format[e].media]=!0}),this.require.video?this.options=t.extend(!0,{},this.optionsVideo,this.options):this.options=t.extend(!0,{},this.optionsAudio,this.options),this._setSize(),this.status.nativeVideoControls=this._uaBlocklist(this.options.nativeVideoControls),this.status.noFullScreen=this._uaBlocklist(this.options.noFullScreen),this.status.noVolume=this._uaBlocklist(this.options.noVolume),this._restrictNativeVideoControls(),this.htmlElement.poster=document.createElement("img"),this.htmlElement.poster.id=this.internal.poster.id,this.htmlElement.poster.onload=function(){s.status.video&&!s.status.waitForPlay||s.internal.poster.jq.show()},this.element.append(this.htmlElement.poster),this.internal.poster.jq=t("#"+this.internal.poster.id),this.internal.poster.jq.css({width:this.status.width,height:this.status.height}),this.internal.poster.jq.hide(),this.internal.poster.jq.bind("click.jPlayer",function(){s._trigger(t.jPlayer.event.click)}),this.html.audio.available=!1,this.require.audio&&(this.htmlElement.audio=document.createElement("audio"),this.htmlElement.audio.id=this.internal.audio.id,this.html.audio.available=!!this.htmlElement.audio.canPlayType&&this._testCanPlayType(this.htmlElement.audio)),this.html.video.available=!1,this.require.video&&(this.htmlElement.video=document.createElement("video"),this.htmlElement.video.id=this.internal.video.id,this.html.video.available=!!this.htmlElement.video.canPlayType&&this._testCanPlayType(this.htmlElement.video)),this.flash.available=this._checkForFlash(10),this.html.canPlay={},this.flash.canPlay={},t.each(this.formats,function(t,e){s.html.canPlay[e]=s.html[s.format[e].media].available&&""!==s.htmlElement[s.format[e].media].canPlayType(s.format[e].codec),s.flash.canPlay[e]=s.format[e].flashCanPlay&&s.flash.available}),this.html.desired=!1,this.flash.desired=!1,t.each(this.solutions,function(e,i){if(0===e)s[i].desired=!0;else{var a=!1,r=!1;t.each(s.formats,function(t,e){s[s.solutions[0]].canPlay[e]&&("video"===s.format[e].media?r=!0:a=!0)}),s[i].desired=s.require.audio&&!a||s.require.video&&!r}}),this.html.support={},this.flash.support={},t.each(this.formats,function(t,e){s.html.support[e]=s.html.canPlay[e]&&s.html.desired,s.flash.support[e]=s.flash.canPlay[e]&&s.flash.desired}),this.html.used=!1,this.flash.used=!1,t.each(this.solutions,function(e,i){t.each(s.formats,function(t,e){if(s[i].support[e])return s[i].used=!0,!1})}),this._resetActive(),this._resetGate(),this._cssSelectorAncestor(this.options.cssSelectorAncestor),this.html.used||this.flash.used?this.css.jq.noSolution.length&&this.css.jq.noSolution.hide():(this._error({type:t.jPlayer.error.NO_SOLUTION,context:"{solution:'"+this.options.solution+"', supplied:'"+this.options.supplied+"'}",message:t.jPlayer.errorMsg.NO_SOLUTION,hint:t.jPlayer.errorHint.NO_SOLUTION}),this.css.jq.noSolution.length&&this.css.jq.noSolution.show()),this.flash.used){var i,a="jQuery="+encodeURI(this.options.noConflict)+"&id="+encodeURI(this.internal.self.id)+"&vol="+this.options.volume+"&muted="+this.options.muted;if(t.jPlayer.browser.msie&&Number(t.jPlayer.browser.version)<=8){var r='<object id="'+this.internal.flash.id+'" classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="0" height="0"></object>',n=['<param name="movie" value="'+this.internal.flash.swf+'" />','<param name="FlashVars" value="'+a+'" />','<param name="allowScriptAccess" value="always" />','<param name="bgcolor" value="'+this.options.backgroundColor+'" />','<param name="wmode" value="'+this.options.wmode+'" />'];i=document.createElement(r);for(var o=0;o<n.length;o++)i.appendChild(document.createElement(n[o]))}else{var l=function(t,e,s){var i=document.createElement("param");i.setAttribute("name",e),i.setAttribute("value",s),t.appendChild(i)};i=document.createElement("object"),i.setAttribute("id",this.internal.flash.id),i.setAttribute("data",this.internal.flash.swf),i.setAttribute("type","application/x-shockwave-flash"),i.setAttribute("width","1"),i.setAttribute("height","1"),l(i,"flashvars",a),l(i,"allowscriptaccess","always"),l(i,"bgcolor",this.options.backgroundColor),l(i,"wmode",this.options.wmode)}this.element.append(i),this.internal.flash.jq=t(i)}this.html.used&&(this.html.audio.available&&(this._addHtmlEventListeners(this.htmlElement.audio,this.html.audio),this.element.append(this.htmlElement.audio),this.internal.audio.jq=t("#"+this.internal.audio.id)),this.html.video.available&&(this._addHtmlEventListeners(this.htmlElement.video,this.html.video),this.element.append(this.htmlElement.video),this.internal.video.jq=t("#"+this.internal.video.id),this.status.nativeVideoControls?this.internal.video.jq.css({width:this.status.width,height:this.status.height}):this.internal.video.jq.css({width:"0px",height:"0px"}),this.internal.video.jq.bind("click.jPlayer",function(){s._trigger(t.jPlayer.event.click)}))),this.options.emulateHtml&&this._emulateHtmlBridge(),this.html.used&&!this.flash.used&&setTimeout(function(){s.internal.ready=!0,s.version.flash="n/a",s._trigger(t.jPlayer.event.repeat),s._trigger(t.jPlayer.event.ready)},100),this._updateNativeVideoControls(),this._updateInterface(),this._updateButtons(!1),this._updateAutohide(),this._updateVolume(this.options.volume),this._updateMute(this.options.muted),this.css.jq.videoPlay.length&&this.css.jq.videoPlay.hide(),t.jPlayer.prototype.count++},destroy:function(){this.clearMedia(),this._removeUiClass(),this.css.jq.currentTime.length&&this.css.jq.currentTime.text(""),this.css.jq.duration.length&&this.css.jq.duration.text(""),t.each(this.css.jq,function(t,e){e.length&&e.unbind(".jPlayer")}),this.internal.poster.jq.unbind(".jPlayer"),this.internal.video.jq&&this.internal.video.jq.unbind(".jPlayer"),this.options.emulateHtml&&this._destroyHtmlBridge(),this.element.removeData("jPlayer"),this.element.unbind(".jPlayer"),this.element.empty(),delete this.instances[this.internal.instance]},enable:function(){},disable:function(){},_testCanPlayType:function(t){try{return t.canPlayType(this.format.mp3.codec),!0}catch(e){return!1}},_uaBlocklist:function(e){var s=navigator.userAgent.toLowerCase(),i=!1;return t.each(e,function(t,e){if(e&&e.test(s))return i=!0,!1}),i},_restrictNativeVideoControls:function(){this.require.audio&&this.status.nativeVideoControls&&(this.status.nativeVideoControls=!1,this.status.noFullScreen=!0)},_updateNativeVideoControls:function(){this.html.video.available&&this.html.used&&(this.htmlElement.video.controls=this.status.nativeVideoControls,this._updateAutohide(),this.status.nativeVideoControls&&this.require.video?(this.internal.poster.jq.hide(),this.internal.video.jq.css({width:this.status.width,height:this.status.height})):this.status.waitForPlay&&this.status.video&&(this.internal.poster.jq.show(),this.internal.video.jq.css({width:"0px",height:"0px"})))},_addHtmlEventListeners:function(e,s){var i=this;e.preload=this.options.preload,e.muted=this.options.muted,e.volume=this.options.volume,e.addEventListener("progress",function(){s.gate&&(i._getHtmlStatus(e),i._updateInterface(),i._trigger(t.jPlayer.event.progress))},!1),e.addEventListener("timeupdate",function(){s.gate&&(i._getHtmlStatus(e),i._updateInterface(),i._trigger(t.jPlayer.event.timeupdate))},!1),e.addEventListener("durationchange",function(){s.gate&&(i._getHtmlStatus(e),i._updateInterface(),i._trigger(t.jPlayer.event.durationchange))},!1),e.addEventListener("play",function(){s.gate&&(i._updateButtons(!0),i._html_checkWaitForPlay(),i._trigger(t.jPlayer.event.play))},!1),e.addEventListener("playing",function(){s.gate&&(i._updateButtons(!0),i._seeked(),i._trigger(t.jPlayer.event.playing))},!1),e.addEventListener("pause",function(){s.gate&&(i._updateButtons(!1),i._trigger(t.jPlayer.event.pause))},!1),e.addEventListener("waiting",function(){s.gate&&(i._seeking(),i._trigger(t.jPlayer.event.waiting))},!1),e.addEventListener("seeking",function(){s.gate&&(i._seeking(),i._trigger(t.jPlayer.event.seeking))},!1),e.addEventListener("seeked",function(){s.gate&&(i._seeked(),i._trigger(t.jPlayer.event.seeked))},!1),e.addEventListener("volumechange",function(){s.gate&&(i.options.volume=e.volume,i.options.muted=e.muted,i._updateMute(),i._updateVolume(),i._trigger(t.jPlayer.event.volumechange))},!1),e.addEventListener("suspend",function(){s.gate&&(i._seeked(),i._trigger(t.jPlayer.event.suspend))},!1),e.addEventListener("ended",function(){s.gate&&(t.jPlayer.browser.webkit||(i.htmlElement.media.currentTime=0),i.htmlElement.media.pause(),i._updateButtons(!1),i._getHtmlStatus(e,!0),i._updateInterface(),i._trigger(t.jPlayer.event.ended))},!1),e.addEventListener("error",function(){s.gate&&(i._updateButtons(!1),i._seeked(),i.status.srcSet&&(clearTimeout(i.internal.htmlDlyCmdId),i.status.waitForLoad=!0,i.status.waitForPlay=!0,i.status.video&&!i.status.nativeVideoControls&&i.internal.video.jq.css({width:"0px",height:"0px"}),i._validString(i.status.media.poster)&&!i.status.nativeVideoControls&&i.internal.poster.jq.show(),i.css.jq.videoPlay.length&&i.css.jq.videoPlay.show(),i._error({type:t.jPlayer.error.URL,context:i.status.src,message:t.jPlayer.errorMsg.URL,hint:t.jPlayer.errorHint.URL})))},!1),t.each(t.jPlayer.htmlEvent,function(a,r){e.addEventListener(this,function(){s.gate&&i._trigger(t.jPlayer.event[r])},!1)})},_getHtmlStatus:function(t,e){var s=0,i=0,a=0,r=0;isFinite(t.duration)&&(this.status.duration=t.duration),s=t.currentTime,i=this.status.duration>0?100*s/this.status.duration:0,"object"==typeof t.seekable&&t.seekable.length>0?(a=this.status.duration>0?100*t.seekable.end(t.seekable.length-1)/this.status.duration:100,r=this.status.duration>0?100*t.currentTime/t.seekable.end(t.seekable.length-1):0):(a=100,r=i),e&&(s=0,r=0,i=0),this.status.seekPercent=a,this.status.currentPercentRelative=r,this.status.currentPercentAbsolute=i,this.status.currentTime=s,this.status.readyState=t.readyState,this.status.networkState=t.networkState,this.status.playbackRate=t.playbackRate,this.status.ended=t.ended},_resetStatus:function(){this.status=t.extend({},this.status,t.jPlayer.prototype.status)},_trigger:function(e,s,i){var a=t.Event(e);a.jPlayer={},a.jPlayer.version=t.extend({},this.version),a.jPlayer.options=t.extend(!0,{},this.options),a.jPlayer.status=t.extend(!0,{},this.status),a.jPlayer.html=t.extend(!0,{},this.html),a.jPlayer.flash=t.extend(!0,{},this.flash),s&&(a.jPlayer.error=t.extend({},s)),i&&(a.jPlayer.warning=t.extend({},i)),this.element.trigger(a)},jPlayerFlashEvent:function(e,s){if(e===t.jPlayer.event.ready)if(this.internal.ready){if(this.flash.gate){if(this.status.srcSet){var i=this.status.currentTime,a=this.status.paused;this.setMedia(this.status.media),i>0&&(a?this.pause(i):this.play(i))}this._trigger(t.jPlayer.event.flashreset)}}else this.internal.ready=!0,this.internal.flash.jq.css({width:"0px",height:"0px"}),this.version.flash=s.version,this.version.needFlash!==this.version.flash&&this._error({type:t.jPlayer.error.VERSION,context:this.version.flash,message:t.jPlayer.errorMsg.VERSION+this.version.flash,hint:t.jPlayer.errorHint.VERSION}),this._trigger(t.jPlayer.event.repeat),this._trigger(e);if(this.flash.gate)switch(e){case t.jPlayer.event.progress:this._getFlashStatus(s),this._updateInterface(),this._trigger(e);break;case t.jPlayer.event.timeupdate:this._getFlashStatus(s),this._updateInterface(),this._trigger(e);break;case t.jPlayer.event.play:this._seeked(),this._updateButtons(!0),this._trigger(e);break;case t.jPlayer.event.pause:this._updateButtons(!1),this._trigger(e);break;case t.jPlayer.event.ended:this._updateButtons(!1),this._trigger(e);break;case t.jPlayer.event.click:this._trigger(e);break;case t.jPlayer.event.error:this.status.waitForLoad=!0,this.status.waitForPlay=!0,this.status.video&&this.internal.flash.jq.css({width:"0px",height:"0px"}),this._validString(this.status.media.poster)&&this.internal.poster.jq.show(),this.css.jq.videoPlay.length&&this.status.video&&this.css.jq.videoPlay.show(),this.status.video?this._flash_setVideo(this.status.media):this._flash_setAudio(this.status.media),this._updateButtons(!1),this._error({type:t.jPlayer.error.URL,context:s.src,message:t.jPlayer.errorMsg.URL,hint:t.jPlayer.errorHint.URL});break;case t.jPlayer.event.seeking:this._seeking(),this._trigger(e);break;case t.jPlayer.event.seeked:this._seeked(),this._trigger(e);break;case t.jPlayer.event.ready:break;default:this._trigger(e)}return!1},_getFlashStatus:function(t){this.status.seekPercent=t.seekPercent,this.status.currentPercentRelative=t.currentPercentRelative,this.status.currentPercentAbsolute=t.currentPercentAbsolute,this.status.currentTime=t.currentTime,this.status.duration=t.duration,this.status.readyState=4,this.status.networkState=0,this.status.playbackRate=1,this.status.ended=!1},_updateButtons:function(t){t!==e&&(this.status.paused=!t,this.css.jq.play.length&&this.css.jq.pause.length&&(t?(this.css.jq.play.hide(),this.css.jq.pause.show()):(this.css.jq.play.show(),this.css.jq.pause.hide()))),this.css.jq.restoreScreen.length&&this.css.jq.fullScreen.length&&(this.status.noFullScreen?(this.css.jq.fullScreen.hide(),this.css.jq.restoreScreen.hide()):this.options.fullScreen?(this.css.jq.fullScreen.hide(),this.css.jq.restoreScreen.show()):(this.css.jq.fullScreen.show(),this.css.jq.restoreScreen.hide())),this.css.jq.repeat.length&&this.css.jq.repeatOff.length&&(this.options.loop?(this.css.jq.repeat.hide(),this.css.jq.repeatOff.show()):(this.css.jq.repeat.show(),this.css.jq.repeatOff.hide()))},_updateInterface:function(){this.css.jq.seekBar.length&&this.css.jq.seekBar.width(this.status.seekPercent+"%"),this.css.jq.playBar.length&&this.css.jq.playBar.width(this.status.currentPercentRelative+"%"),this.css.jq.currentTime.length&&this.css.jq.currentTime.text(t.jPlayer.convertTime(this.status.currentTime)),this.css.jq.duration.length&&this.css.jq.duration.text(t.jPlayer.convertTime(this.status.duration))},_seeking:function(){this.css.jq.seekBar.length&&this.css.jq.seekBar.addClass("jp-seeking-bg")},_seeked:function(){this.css.jq.seekBar.length&&this.css.jq.seekBar.removeClass("jp-seeking-bg")},_resetGate:function(){this.html.audio.gate=!1,this.html.video.gate=!1,this.flash.gate=!1},_resetActive:function(){this.html.active=!1,this.flash.active=!1},setMedia:function(e){var s=this,i=!1,a=this.status.media.poster!==e.poster;this._resetMedia(),this._resetGate(),this._resetActive(),t.each(this.formats,function(a,r){var n="video"===s.format[r].media;if(t.each(s.solutions,function(t,a){if(s[a].support[r]&&s._validString(e[r])){var o="html"===a;return n?(o?(s.html.video.gate=!0,s._html_setVideo(e),s.html.active=!0):(s.flash.gate=!0,s._flash_setVideo(e),s.flash.active=!0),s.css.jq.videoPlay.length&&s.css.jq.videoPlay.show(),s.status.video=!0):(o?(s.html.audio.gate=!0,s._html_setAudio(e),s.html.active=!0):(s.flash.gate=!0,s._flash_setAudio(e),s.flash.active=!0),s.css.jq.videoPlay.length&&s.css.jq.videoPlay.hide(),s.status.video=!1),i=!0,!1}}),i)return!1}),i?(this.status.nativeVideoControls&&this.html.video.gate||this._validString(e.poster)&&(a?this.htmlElement.poster.src=e.poster:this.internal.poster.jq.show()),this.status.srcSet=!0,this.status.media=t.extend({},e),this._updateButtons(!1),this._updateInterface()):this._error({type:t.jPlayer.error.NO_SUPPORT,context:"{supplied:'"+this.options.supplied+"'}",message:t.jPlayer.errorMsg.NO_SUPPORT,hint:t.jPlayer.errorHint.NO_SUPPORT})},_resetMedia:function(){this._resetStatus(),this._updateButtons(!1),this._updateInterface(),this._seeked(),this.internal.poster.jq.hide(),clearTimeout(this.internal.htmlDlyCmdId),this.html.active?this._html_resetMedia():this.flash.active&&this._flash_resetMedia()},clearMedia:function(){this._resetMedia(),this.html.active?this._html_clearMedia():this.flash.active&&this._flash_clearMedia(),this._resetGate(),this._resetActive()},load:function(){this.status.srcSet?this.html.active?this._html_load():this.flash.active&&this._flash_load():this._urlNotSetError("load")},play:function(t){t="number"==typeof t?t:NaN,this.status.srcSet?this.html.active?this._html_play(t):this.flash.active&&this._flash_play(t):this._urlNotSetError("play");
},videoPlay:function(){this.play()},pause:function(t){t="number"==typeof t?t:NaN,this.status.srcSet?this.html.active?this._html_pause(t):this.flash.active&&this._flash_pause(t):this._urlNotSetError("pause")},pauseOthers:function(){var e=this;t.each(this.instances,function(t,s){e.element!==s&&s.data("jPlayer").status.srcSet&&s.jPlayer("pause")})},stop:function(){this.status.srcSet?this.html.active?this._html_pause(0):this.flash.active&&this._flash_pause(0):this._urlNotSetError("stop")},playHead:function(t){t=this._limitValue(t,0,100),this.status.srcSet?this.html.active?this._html_playHead(t):this.flash.active&&this._flash_playHead(t):this._urlNotSetError("playHead")},_muted:function(e){this.options.muted=e,this.html.used&&this._html_mute(e),this.flash.used&&this._flash_mute(e),this.html.video.gate||this.html.audio.gate||(this._updateMute(e),this._updateVolume(this.options.volume),this._trigger(t.jPlayer.event.volumechange))},mute:function(t){t=t===e||!!t,this._muted(t)},unmute:function(t){t=t===e||!!t,this._muted(!t)},_updateMute:function(t){t===e&&(t=this.options.muted),this.css.jq.mute.length&&this.css.jq.unmute.length&&(this.status.noVolume?(this.css.jq.mute.hide(),this.css.jq.unmute.hide()):t?(this.css.jq.mute.hide(),this.css.jq.unmute.show()):(this.css.jq.mute.show(),this.css.jq.unmute.hide()))},volume:function(e){e=this._limitValue(e,0,1),this.options.volume=e,this.html.used&&this._html_volume(e),this.flash.used&&this._flash_volume(e),this.html.video.gate||this.html.audio.gate||(this._updateVolume(e),this._trigger(t.jPlayer.event.volumechange))},volumeBar:function(t){if(this.css.jq.volumeBar.length){var e=this.css.jq.volumeBar.offset(),s=t.pageX-e.left,i=this.css.jq.volumeBar.width(),a=this.css.jq.volumeBar.height()-t.pageY+e.top,r=this.css.jq.volumeBar.height();this.options.verticalVolume?this.volume(a/r):this.volume(s/i)}this.options.muted&&this._muted(!1)},volumeBarValue:function(t){this.volumeBar(t)},_updateVolume:function(t){t===e&&(t=this.options.volume),t=this.options.muted?0:t,this.status.noVolume?(this.css.jq.volumeBar.length&&this.css.jq.volumeBar.hide(),this.css.jq.volumeBarValue.length&&this.css.jq.volumeBarValue.hide(),this.css.jq.volumeMax.length&&this.css.jq.volumeMax.hide()):(this.css.jq.volumeBar.length&&this.css.jq.volumeBar.show(),this.css.jq.volumeBarValue.length&&(this.css.jq.volumeBarValue.show(),this.css.jq.volumeBarValue[this.options.verticalVolume?"height":"width"](100*t+"%")),this.css.jq.volumeMax.length&&this.css.jq.volumeMax.show())},volumeMax:function(){this.volume(1),this.options.muted&&this._muted(!1)},_cssSelectorAncestor:function(e){var s=this;this.options.cssSelectorAncestor=e,this._removeUiClass(),this.ancestorJq=e?t(e):[],e&&1!==this.ancestorJq.length&&this._warning({type:t.jPlayer.warning.CSS_SELECTOR_COUNT,context:e,message:t.jPlayer.warningMsg.CSS_SELECTOR_COUNT+this.ancestorJq.length+" found for cssSelectorAncestor.",hint:t.jPlayer.warningHint.CSS_SELECTOR_COUNT}),this._addUiClass(),t.each(this.options.cssSelector,function(t,e){s._cssSelector(t,e)})},_cssSelector:function(e,s){var i=this;if("string"==typeof s)if(t.jPlayer.prototype.options.cssSelector[e]){if(this.css.jq[e]&&this.css.jq[e].length&&this.css.jq[e].unbind(".jPlayer"),this.options.cssSelector[e]=s,this.css.cs[e]=this.options.cssSelectorAncestor+" "+s,s?this.css.jq[e]=t(this.css.cs[e]):this.css.jq[e]=[],this.css.jq[e].length){var a=function(s){return i[e](s),t(this).blur(),!1};this.css.jq[e].bind("click.jPlayer",a)}s&&1!==this.css.jq[e].length&&this._warning({type:t.jPlayer.warning.CSS_SELECTOR_COUNT,context:this.css.cs[e],message:t.jPlayer.warningMsg.CSS_SELECTOR_COUNT+this.css.jq[e].length+" found for "+e+" method.",hint:t.jPlayer.warningHint.CSS_SELECTOR_COUNT})}else this._warning({type:t.jPlayer.warning.CSS_SELECTOR_METHOD,context:e,message:t.jPlayer.warningMsg.CSS_SELECTOR_METHOD,hint:t.jPlayer.warningHint.CSS_SELECTOR_METHOD});else this._warning({type:t.jPlayer.warning.CSS_SELECTOR_STRING,context:s,message:t.jPlayer.warningMsg.CSS_SELECTOR_STRING,hint:t.jPlayer.warningHint.CSS_SELECTOR_STRING})},seekBar:function(t){if(this.css.jq.seekBar){var e=this.css.jq.seekBar.offset(),s=t.pageX-e.left,i=this.css.jq.seekBar.width(),a=100*s/i;this.playHead(a)}},playBar:function(t){this.seekBar(t)},repeat:function(){this._loop(!0)},repeatOff:function(){this._loop(!1)},_loop:function(e){this.options.loop!==e&&(this.options.loop=e,this._updateButtons(),this._trigger(t.jPlayer.event.repeat))},currentTime:function(){},duration:function(){},gui:function(){},noSolution:function(){},option:function(s,i){var a=s;if(0===arguments.length)return t.extend(!0,{},this.options);if("string"==typeof s){var r=s.split(".");if(i===e){for(var n=t.extend(!0,{},this.options),o=0;o<r.length;o++){if(n[r[o]]===e)return this._warning({type:t.jPlayer.warning.OPTION_KEY,context:s,message:t.jPlayer.warningMsg.OPTION_KEY,hint:t.jPlayer.warningHint.OPTION_KEY}),e;n=n[r[o]]}return n}a={};for(var l=a,h=0;h<r.length;h++)h<r.length-1?(l[r[h]]={},l=l[r[h]]):l[r[h]]=i}return this._setOptions(a),this},_setOptions:function(e){var s=this;return t.each(e,function(t,e){s._setOption(t,e)}),this},_setOption:function(e,s){var i=this;switch(e){case"volume":this.volume(s);break;case"muted":this._muted(s);break;case"cssSelectorAncestor":this._cssSelectorAncestor(s);break;case"cssSelector":t.each(s,function(t,e){i._cssSelector(t,e)});break;case"fullScreen":this.options[e]!==s&&(this._removeUiClass(),this.options[e]=s,this._refreshSize());break;case"size":this.options.fullScreen||this.options[e].cssClass===s.cssClass||this._removeUiClass(),this.options[e]=t.extend({},this.options[e],s),this._refreshSize();break;case"sizeFull":this.options.fullScreen&&this.options[e].cssClass!==s.cssClass&&this._removeUiClass(),this.options[e]=t.extend({},this.options[e],s),this._refreshSize();break;case"autohide":this.options[e]=t.extend({},this.options[e],s),this._updateAutohide();break;case"loop":this._loop(s);break;case"nativeVideoControls":this.options[e]=t.extend({},this.options[e],s),this.status.nativeVideoControls=this._uaBlocklist(this.options.nativeVideoControls),this._restrictNativeVideoControls(),this._updateNativeVideoControls();break;case"noFullScreen":this.options[e]=t.extend({},this.options[e],s),this.status.nativeVideoControls=this._uaBlocklist(this.options.nativeVideoControls),this.status.noFullScreen=this._uaBlocklist(this.options.noFullScreen),this._restrictNativeVideoControls(),this._updateButtons();break;case"noVolume":this.options[e]=t.extend({},this.options[e],s),this.status.noVolume=this._uaBlocklist(this.options.noVolume),this._updateVolume(),this._updateMute();break;case"emulateHtml":this.options[e]!==s&&(this.options[e]=s,s?this._emulateHtmlBridge():this._destroyHtmlBridge())}return this},_refreshSize:function(){this._setSize(),this._addUiClass(),this._updateSize(),this._updateButtons(),this._updateAutohide(),this._trigger(t.jPlayer.event.resize)},_setSize:function(){this.options.fullScreen?(this.status.width=this.options.sizeFull.width,this.status.height=this.options.sizeFull.height,this.status.cssClass=this.options.sizeFull.cssClass):(this.status.width=this.options.size.width,this.status.height=this.options.size.height,this.status.cssClass=this.options.size.cssClass),this.element.css({width:this.status.width,height:this.status.height})},_addUiClass:function(){this.ancestorJq.length&&this.ancestorJq.addClass(this.status.cssClass)},_removeUiClass:function(){this.ancestorJq.length&&this.ancestorJq.removeClass(this.status.cssClass)},_updateSize:function(){this.internal.poster.jq.css({width:this.status.width,height:this.status.height}),!this.status.waitForPlay&&this.html.active&&this.status.video||this.html.video.available&&this.html.used&&this.status.nativeVideoControls?this.internal.video.jq.css({width:this.status.width,height:this.status.height}):!this.status.waitForPlay&&this.flash.active&&this.status.video&&this.internal.flash.jq.css({width:this.status.width,height:this.status.height})},_updateAutohide:function(){var t=this,e="mousemove.jPlayer",s=".jPlayerAutohide",i=e+s,a=function(){t.css.jq.gui.fadeIn(t.options.autohide.fadeIn,function(){clearTimeout(t.internal.autohideId),t.internal.autohideId=setTimeout(function(){t.css.jq.gui.fadeOut(t.options.autohide.fadeOut)},t.options.autohide.hold)})};this.css.jq.gui.length&&(this.css.jq.gui.stop(!0,!0),clearTimeout(this.internal.autohideId),this.element.unbind(s),this.css.jq.gui.unbind(s),this.status.nativeVideoControls?this.css.jq.gui.hide():this.options.fullScreen&&this.options.autohide.full||!this.options.fullScreen&&this.options.autohide.restored?(this.element.bind(i,a),this.css.jq.gui.bind(i,a),this.css.jq.gui.hide()):this.css.jq.gui.show())},fullScreen:function(){this._setOption("fullScreen",!0)},restoreScreen:function(){this._setOption("fullScreen",!1)},_html_initMedia:function(){this.htmlElement.media.src=this.status.src,"none"!==this.options.preload&&this._html_load(),this._trigger(t.jPlayer.event.timeupdate)},_html_setAudio:function(e){var s=this;t.each(this.formats,function(t,i){if(s.html.support[i]&&e[i])return s.status.src=e[i],s.status.format[i]=!0,s.status.formatType=i,!1}),this.htmlElement.media=this.htmlElement.audio,this._html_initMedia()},_html_setVideo:function(e){var s=this;t.each(this.formats,function(t,i){if(s.html.support[i]&&e[i])return s.status.src=e[i],s.status.format[i]=!0,s.status.formatType=i,!1}),this.status.nativeVideoControls&&(this.htmlElement.video.poster=this._validString(e.poster)?e.poster:""),this.htmlElement.media=this.htmlElement.video,this._html_initMedia()},_html_resetMedia:function(){this.htmlElement.media&&(this.htmlElement.media.id!==this.internal.video.id||this.status.nativeVideoControls||this.internal.video.jq.css({width:"0px",height:"0px"}),this.htmlElement.media.pause())},_html_clearMedia:function(){this.htmlElement.media&&(this.htmlElement.media.src="",this.htmlElement.media.load())},_html_load:function(){this.status.waitForLoad&&(this.status.waitForLoad=!1,this.htmlElement.media.load()),clearTimeout(this.internal.htmlDlyCmdId)},_html_play:function(t){var e=this;if(this._html_load(),this.htmlElement.media.play(),!isNaN(t))try{this.htmlElement.media.currentTime=t}catch(s){return void(this.internal.htmlDlyCmdId=setTimeout(function(){e.play(t)},100))}this._html_checkWaitForPlay()},_html_pause:function(t){var e=this;if(t>0?this._html_load():clearTimeout(this.internal.htmlDlyCmdId),this.htmlElement.media.pause(),!isNaN(t))try{this.htmlElement.media.currentTime=t}catch(s){return void(this.internal.htmlDlyCmdId=setTimeout(function(){e.pause(t)},100))}t>0&&this._html_checkWaitForPlay()},_html_playHead:function(t){var e=this;this._html_load();try{if("object"==typeof this.htmlElement.media.seekable&&this.htmlElement.media.seekable.length>0)this.htmlElement.media.currentTime=t*this.htmlElement.media.seekable.end(this.htmlElement.media.seekable.length-1)/100;else{if(!(this.htmlElement.media.duration>0)||isNaN(this.htmlElement.media.duration))throw"e";this.htmlElement.media.currentTime=t*this.htmlElement.media.duration/100}}catch(s){return void(this.internal.htmlDlyCmdId=setTimeout(function(){e.playHead(t)},100))}this.status.waitForLoad||this._html_checkWaitForPlay()},_html_checkWaitForPlay:function(){this.status.waitForPlay&&(this.status.waitForPlay=!1,this.css.jq.videoPlay.length&&this.css.jq.videoPlay.hide(),this.status.video&&(this.internal.poster.jq.hide(),this.internal.video.jq.css({width:this.status.width,height:this.status.height})))},_html_volume:function(t){this.html.audio.available&&(this.htmlElement.audio.volume=t),this.html.video.available&&(this.htmlElement.video.volume=t)},_html_mute:function(t){this.html.audio.available&&(this.htmlElement.audio.muted=t),this.html.video.available&&(this.htmlElement.video.muted=t)},_flash_setAudio:function(e){var s=this;try{t.each(this.formats,function(t,i){if(s.flash.support[i]&&e[i]){switch(i){case"m4a":case"fla":s._getMovie().fl_setAudio_m4a(e[i]);break;case"mp3":s._getMovie().fl_setAudio_mp3(e[i]);break;case"rtmpa":s._getMovie().fl_setAudio_rtmp(e[i])}return s.status.src=e[i],s.status.format[i]=!0,s.status.formatType=i,!1}}),"auto"===this.options.preload&&(this._flash_load(),this.status.waitForLoad=!1)}catch(i){this._flashError(i)}},_flash_setVideo:function(e){var s=this;try{t.each(this.formats,function(t,i){if(s.flash.support[i]&&e[i]){switch(i){case"m4v":case"flv":s._getMovie().fl_setVideo_m4v(e[i]);break;case"rtmpv":s._getMovie().fl_setVideo_rtmp(e[i])}return s.status.src=e[i],s.status.format[i]=!0,s.status.formatType=i,!1}}),"auto"===this.options.preload&&(this._flash_load(),this.status.waitForLoad=!1)}catch(i){this._flashError(i)}},_flash_resetMedia:function(){this.internal.flash.jq.css({width:"0px",height:"0px"}),this._flash_pause(NaN)},_flash_clearMedia:function(){try{this._getMovie().fl_clearMedia()}catch(t){this._flashError(t)}},_flash_load:function(){try{this._getMovie().fl_load()}catch(t){this._flashError(t)}this.status.waitForLoad=!1},_flash_play:function(t){try{this._getMovie().fl_play(t)}catch(e){this._flashError(e)}this.status.waitForLoad=!1,this._flash_checkWaitForPlay()},_flash_pause:function(t){try{this._getMovie().fl_pause(t)}catch(e){this._flashError(e)}t>0&&(this.status.waitForLoad=!1,this._flash_checkWaitForPlay())},_flash_playHead:function(t){try{this._getMovie().fl_play_head(t)}catch(e){this._flashError(e)}this.status.waitForLoad||this._flash_checkWaitForPlay()},_flash_checkWaitForPlay:function(){this.status.waitForPlay&&(this.status.waitForPlay=!1,this.css.jq.videoPlay.length&&this.css.jq.videoPlay.hide(),this.status.video&&(this.internal.poster.jq.hide(),this.internal.flash.jq.css({width:this.status.width,height:this.status.height})))},_flash_volume:function(t){try{this._getMovie().fl_volume(t)}catch(e){this._flashError(e)}},_flash_mute:function(t){try{this._getMovie().fl_mute(t)}catch(e){this._flashError(e)}},_getMovie:function(){return document[this.internal.flash.id]},_checkForFlash:function(t){var e,s=!1;if(window.ActiveXObject)try{e=new ActiveXObject("ShockwaveFlash.ShockwaveFlash."+t),s=!0}catch(i){}else if(navigator.plugins&&navigator.mimeTypes.length>0&&(e=navigator.plugins["Shockwave Flash"])){var a=navigator.plugins["Shockwave Flash"].description.replace(/.*\s(\d+\.\d+).*/,"$1");a>=t&&(s=!0)}return s},_validString:function(t){return t&&"string"==typeof t},_limitValue:function(t,e,s){return t<e?e:t>s?s:t},_urlNotSetError:function(e){this._error({type:t.jPlayer.error.URL_NOT_SET,context:e,message:t.jPlayer.errorMsg.URL_NOT_SET,hint:t.jPlayer.errorHint.URL_NOT_SET})},_flashError:function(e){var s;s=this.internal.ready?"FLASH_DISABLED":"FLASH",this._error({type:t.jPlayer.error[s],context:this.internal.flash.swf,message:t.jPlayer.errorMsg[s]+e.message,hint:t.jPlayer.errorHint[s]}),this.internal.flash.jq.css({width:"1px",height:"1px"})},_error:function(e){this._trigger(t.jPlayer.event.error,e),this.options.errorAlerts&&this._alert("Error!"+(e.message?"\n\n"+e.message:"")+(e.hint?"\n\n"+e.hint:"")+"\n\nContext: "+e.context)},_warning:function(s){this._trigger(t.jPlayer.event.warning,e,s),this.options.warningAlerts&&this._alert("Warning!"+(s.message?"\n\n"+s.message:"")+(s.hint?"\n\n"+s.hint:"")+"\n\nContext: "+s.context)},_alert:function(t){alert("jPlayer "+this.version.script+" : id='"+this.internal.self.id+"' : "+t)},_emulateHtmlBridge:function(){var e=this;t.each(t.jPlayer.emulateMethods.split(/\s+/g),function(t,s){e.internal.domNode[s]=function(t){e[s](t)}}),t.each(t.jPlayer.event,function(s,i){var a=!0;t.each(t.jPlayer.reservedEvent.split(/\s+/g),function(t,e){if(e===s)return a=!1,!1}),a&&e.element.bind(i+".jPlayer.jPlayerHtml",function(){e._emulateHtmlUpdate();var t=document.createEvent("Event");t.initEvent(s,!1,!0),e.internal.domNode.dispatchEvent(t)})})},_emulateHtmlUpdate:function(){var e=this;t.each(t.jPlayer.emulateStatus.split(/\s+/g),function(t,s){e.internal.domNode[s]=e.status[s]}),t.each(t.jPlayer.emulateOptions.split(/\s+/g),function(t,s){e.internal.domNode[s]=e.options[s]})},_destroyHtmlBridge:function(){var e=this;this.element.unbind(".jPlayerHtml");var s=t.jPlayer.emulateMethods+" "+t.jPlayer.emulateStatus+" "+t.jPlayer.emulateOptions;t.each(s.split(/\s+/g),function(t,s){delete e.internal.domNode[s]})}},t.jPlayer.error={FLASH:"e_flash",FLASH_DISABLED:"e_flash_disabled",NO_SOLUTION:"e_no_solution",NO_SUPPORT:"e_no_support",URL:"e_url",URL_NOT_SET:"e_url_not_set",VERSION:"e_version"},t.jPlayer.errorMsg={FLASH:"jPlayer's Flash fallback is not configured correctly, or a command was issued before the jPlayer Ready event. Details: ",FLASH_DISABLED:"jPlayer's Flash fallback has been disabled by the browser due to the CSS rules you have used. Details: ",NO_SOLUTION:"No solution can be found by jPlayer in this browser. Neither HTML nor Flash can be used.",NO_SUPPORT:"It is not possible to play any media format provided in setMedia() on this browser using your current options.",URL:"Media URL could not be loaded.",URL_NOT_SET:"Attempt to issue media playback commands, while no media url is set.",VERSION:"jPlayer "+t.jPlayer.prototype.version.script+" needs Jplayer.swf version "+t.jPlayer.prototype.version.needFlash+" but found "},t.jPlayer.errorHint={FLASH:"Check your swfPath option and that Jplayer.swf is there.",FLASH_DISABLED:"Check that you have not display:none; the jPlayer entity or any ancestor.",NO_SOLUTION:"Review the jPlayer options: support and supplied.",NO_SUPPORT:"Video or audio formats defined in the supplied option are missing.",URL:"Check media URL is valid.",URL_NOT_SET:"Use setMedia() to set the media URL.",VERSION:"Update jPlayer files."},t.jPlayer.warning={CSS_SELECTOR_COUNT:"e_css_selector_count",CSS_SELECTOR_METHOD:"e_css_selector_method",CSS_SELECTOR_STRING:"e_css_selector_string",OPTION_KEY:"e_option_key"},t.jPlayer.warningMsg={CSS_SELECTOR_COUNT:"The number of css selectors found did not equal one: ",CSS_SELECTOR_METHOD:"The methodName given in jPlayer('cssSelector') is not a valid jPlayer method.",CSS_SELECTOR_STRING:"The methodCssSelector given in jPlayer('cssSelector') is not a String or is empty.",OPTION_KEY:"The option requested in jPlayer('option') is undefined."},t.jPlayer.warningHint={CSS_SELECTOR_COUNT:"Check your css selector and the ancestor.",CSS_SELECTOR_METHOD:"Check your method name.",CSS_SELECTOR_STRING:"Check your css selector is a string.",OPTION_KEY:"Check your option name."}}(jQuery),function(t,e,s,i,a){function r(e){e=e.split(")");var s,a,r,n=t.trim,o=-1,l=e.length-1,h=w?new Float32Array(6):[],u=w?new Float32Array(6):[],c=w?new Float32Array(6):[1,0,0,1,0,0];for(h[0]=h[3]=c[0]=c[3]=1,h[1]=h[2]=h[4]=h[5]=0;++o<l;){switch(s=e[o].split("("),a=n(s[0]),r=s[1],u[0]=u[3]=1,u[1]=u[2]=u[4]=u[5]=0,a){case k+"X":u[4]=parseInt(r,10);break;case k+"Y":u[5]=parseInt(r,10);break;case k:r=r.split(","),u[4]=parseInt(r[0],10),u[5]=parseInt(r[1]||0,10);break;case x:r=d(r),u[0]=i.cos(r),u[1]=i.sin(r),u[2]=-i.sin(r),u[3]=i.cos(r);break;case T+"X":u[0]=+r;break;case T+"Y":u[3]=r;break;case T:r=r.split(","),u[0]=r[0],u[3]=r.length>1?r[1]:r[0];break;case O+"X":u[2]=i.tan(d(r));break;case O+"Y":u[1]=i.tan(d(r));break;case M:r=r.split(","),u[0]=r[0],u[1]=r[1],u[2]=r[2],u[3]=r[3],u[4]=parseInt(r[4],10),u[5]=parseInt(r[5],10)}c[0]=h[0]*u[0]+h[2]*u[1],c[1]=h[1]*u[0]+h[3]*u[1],c[2]=h[0]*u[2]+h[2]*u[3],c[3]=h[1]*u[2]+h[3]*u[3],c[4]=h[0]*u[4]+h[2]*u[5]+h[4],c[5]=h[1]*u[4]+h[3]*u[5]+h[5],h=[c[0],c[1],c[2],c[3],c[4],c[5]]}return c}function n(t){var e,s,a,r=t[0],n=t[1],o=t[2],l=t[3];return r*l-n*o?(e=i.sqrt(r*r+n*n),r/=e,n/=e,a=r*o+n*l,o-=r*a,l-=n*a,s=i.sqrt(o*o+l*l),o/=s,l/=s,a/=s,r*l<n*o&&(r=-r,n=-n,a=-a,e=-e)):e=s=a=0,[[k,[+t[4],+t[5]]],[x,i.atan2(n,r)],[O+"X",i.atan(a)],[T,[e,s]]]}function o(e,s){var i,a,o,d,m={start:[],end:[]},f=-1;if(("none"==e||h(e))&&(e=""),("none"==s||h(s))&&(s=""),e&&s&&!s.indexOf("matrix")&&p(e).join()==p(s.split(")")[0]).join()&&(m.origin=e,e="",s=s.slice(s.indexOf(")")+1)),e||s){if(e&&s&&u(e)!=u(s))m.start=n(r(e)),m.end=n(r(s));else for(e&&(e=e.split(")"))&&(i=e.length),s&&(s=s.split(")"))&&(i=s.length);++f<i-1;)e[f]&&(a=e[f].split("(")),s[f]&&(o=s[f].split("(")),d=t.trim((a||o)[0]),c(m.start,l(d,a?a[1]:0)),c(m.end,l(d,o?o[1]:0));return m}}function l(t,e){var s,i=+!t.indexOf(T),a=t.replace(/e[XY]/,"e");switch(t){case k+"Y":case T+"Y":e=[i,e?parseFloat(e):i];break;case k+"X":case k:case T+"X":s=1;case T:e=e?(e=e.split(","))&&[parseFloat(e[0]),parseFloat(e.length>1?e[1]:t==T?s||e[0]:i+"")]:[i,i];break;case O+"X":case O+"Y":case x:e=e?d(e):0;break;case M:return n(e?p(e):[1,0,0,1,0,0])}return[[a,e]]}function h(t){return q.test(t)}function u(t){return t.replace(/(?:\([^)]*\))|\s/g,"")}function c(t,e,s){for(;s=e.shift();)t.push(s)}function d(t){return~t.indexOf("deg")?parseInt(t,10)*(2*i.PI/360):~t.indexOf("grad")?parseInt(t,10)*(i.PI/200):parseFloat(t)}function p(t){return t=/([^,]*),([^,]*),([^,]*),([^,]*),([^,p]*)(?:px)?,([^)p]*)(?:px)?/.exec(t),[t[1],t[2],t[3],t[4],t[5],t[6]]}for(var m,f,v,g,y=s.createElement("div"),_=y.style,j="Transform",P=["O"+j,"ms"+j,"Webkit"+j,"Moz"+j],b=P.length,w=("Float32Array"in e),S=/Matrix([^)]*)/,q=/^\s*matrix\(\s*1\s*,\s*0\s*,\s*0\s*,\s*1\s*(?:,\s*0(?:px)?\s*){2}\)\s*$/,E="transform",C="transformOrigin",k="translate",x="rotate",T="scale",O="skew",M="matrix";b--;)P[b]in _&&(t.support[E]=m=P[b],t.support[C]=m+"Origin");m||(t.support.matrixFilter=f=""===_.filter),t.cssNumber[E]=t.cssNumber[C]=!0,m&&m!=E?(t.cssProps[E]=m,t.cssProps[C]=m+"Origin",m=="Moz"+j?v={get:function(e,s){return s?t.css(e,m).split("px").join(""):e.style[m]},set:function(t,e){t.style[m]=/matrix\([^)p]*\)/.test(e)?e.replace(/matrix((?:[^,]*,){4})([^,]*),([^)]*)/,M+"$1$2px,$3px"):e}}:/^1\.[0-5](?:\.|$)/.test(t.fn.jquery)&&(v={get:function(e,s){return s?t.css(e,m.replace(/^ms/,"Ms")):e.style[m]}})):f&&(v={get:function(e,s,i){var r,n,o=s&&e.currentStyle?e.currentStyle:e.style;return o&&S.test(o.filter)?(r=RegExp.$1.split(","),r=[r[0].split("=")[1],r[2].split("=")[1],r[1].split("=")[1],r[3].split("=")[1]]):r=[1,0,0,1],t.cssHooks[C]?(n=t._data(e,"transformTranslate",a),r[4]=n?n[0]:0,r[5]=n?n[1]:0):(r[4]=o?parseInt(o.left,10)||0:0,r[5]=o?parseInt(o.top,10)||0:0),i?r:M+"("+r+")"},set:function(e,s,i){var a,n,o,l,h=e.style;i||(h.zoom=1),s=r(s),n=["Matrix(M11="+s[0],"M12="+s[2],"M21="+s[1],"M22="+s[3],"SizingMethod='auto expand'"].join(),o=(a=e.currentStyle)&&a.filter||h.filter||"",h.filter=S.test(o)?o.replace(S,n):o+" progid:DXImageTransform.Microsoft."+n+")",t.cssHooks[C]?t.cssHooks[C].set(e,s):((l=t.transform.centerOrigin)&&(h["margin"==l?"marginLeft":"left"]=-(e.offsetWidth/2)+e.clientWidth/2+"px",h["margin"==l?"marginTop":"top"]=-(e.offsetHeight/2)+e.clientHeight/2+"px"),h.left=s[4]+"px",h.top=s[5]+"px")}}),v&&(t.cssHooks[E]=v),g=v&&v.get||t.css,t.fx.step.transform=function(e){var s,a,r,n,l=e.elem,h=e.start,u=e.end,c=e.pos,d="",p=1e5;for(h&&"string"!=typeof h||(h||(h=g(l,m)),f&&(l.style.zoom=1),u=u.split("+=").join(h),t.extend(e,o(h,u)),h=e.start,u=e.end),s=h.length;s--;)switch(a=h[s],r=u[s],n=0,a[0]){case k:n="px";case T:n||(n=""),d=a[0]+"("+i.round((a[1][0]+(r[1][0]-a[1][0])*c)*p)/p+n+","+i.round((a[1][1]+(r[1][1]-a[1][1])*c)*p)/p+n+")"+d;break;case O+"X":case O+"Y":case x:d=a[0]+"("+i.round((a[1]+(r[1]-a[1])*c)*p)/p+"rad)"+d}e.origin&&(d=e.origin+d),v&&v.set?v.set(l,d,1):l.style[m]=d},t.transform={centerOrigin:"margin"}}(jQuery,window,document,Math),window.Modernizr=function(t,e,s){function i(){}function a(t,e){for(var i in t)if(f[t[i]]!==s&&(!e||e(t[i],m)))return!0}function r(t,e){return typeof t===e}function n(t){f.cssText=t}var o,l,h="1.7pre",u={},c=!0,d=e.documentElement,p=(e.head||e.getElementsByTagName("head")[0],"modernizr"),m=e.createElement(p),f=m.style,v=e.createElement("input"),g=(Object.prototype.toString," -webkit- -moz- -o- -ms- -khtml- ".split(" "),"Webkit Moz O ms Khtml".split(" "),{}),y=[],_=(function(){function t(t,a){a=a||e.createElement(i[t]||"div");var n=(t="on"+t)in a;return n||(a.setAttribute||(a=e.createElement("div")),a.setAttribute&&a.removeAttribute&&(a.setAttribute(t,""),n=r(a[t],"function"),r(a[t],s)||(a[t]=s),a.removeAttribute(t))),a=null,n}var i={select:"input",change:"input",submit:"form",reset:"form",error:"img",load:"img",abort:"img"};return t}(),{}.hasOwnProperty);l=r(_,s)||r(_.call,s)?function(t,e){return e in t&&r(t.constructor.prototype[e],s)}:function(t,e){return _.call(t,e)},g.csstransforms=function(){return!!a(["transformProperty","WebkitTransform","MozTransform","OTransform","msTransform"])};for(var j in g)l(g,j)&&(o=j.toLowerCase(),u[o]=g[j](),y.push((u[o]?"":"no-")+o));return u.input||i(),u.crosswindowmessaging=u.postmessage,u.historymanagement=u.history,u.addTest=function(t,e){if(t=t.toLowerCase(),!u[t])return e=!!e(),d.className+=" "+(e?"":"no-")+t,u[t]=e,u},n(""),m=v=null,u._enableHTML5=c,u._version=h,d.className=d.className.replace(/\bno-js\b/,"")+" js "+y.join(" "),u}(this,this.document),$(window).scroll(collapseNavbar),$(document).ready(collapseNavbar),$(function(){$("a.page-scroll").bind("click",function(t){var e=$(this);$("html, body").stop().animate({scrollTop:$(e.attr("href")).offset().top},1500,"easeInOutExpo"),t.preventDefault()})}),$(".navbar-collapse ul li a").click(function(){"dropdown-toggle active"!=$(this).attr("class")&&"dropdown-toggle"!=$(this).attr("class")&&$(".navbar-toggle:visible").click()}),$(function(){var t=480,e=$(".bottom-bar .rating-block"),s=e.length;e.eq(0).height();0!==s&&(setInterval(function(){var t=Math.floor(Math.random()*s)+1;e.css("opacity","0.4");for(var i=0;i<t;i++){var a=Math.floor(Math.random()*s)+1;e.eq(a).css("opacity","0.5")}},t),$(".bottom-bar > div").on("mouseenter",function(){var t=$(this).find(".rating-block").data("rating");$(".v-descriptions > p").not('.v-descriptions > p[data-rating="'+t+'"]').hide(),$('.v-descriptions > p[data-rating="'+t+'"]').show()}))}),$(function(){function t(t,e){var s=MyApp.templates.mixes(t);$("#mixes-tmpl-"+e).html(s),s=MyApp.templates.jplayers(t),$("#jplayers-tmpl-"+e).html(s)}function e(t){t.forEach(function(t){new CirclePlayer("#jquery_jplayer_"+t.slug,{mp3:s+t.slug+".mp3",m4a:s+t.slug+".m4a"},{cssSelectorAncestor:"#cp_container_"+t.slug})})}var s="http://djmountainous.com/mixes/",i={mixes:[{title:"The Eiger",genres:"Tech House",date:"Sept 2016",slug:"dj-mountainous-va-tech-house",rating:3},{title:"Garibaldi",genres:"Deep House",date:"June 2016",slug:"dj-mountainous-va-deep-house-v2",rating:2}]},a={mixes:[{title:"Blueprint 19th Warm-up",genres:"Heavy",date:"October 2016",slug:"dj-mountainous-blueprint-19-warmup",rating:9},{title:"Live @ BirthRave 2016",genres:"Bass Funk, Trap, Dub",date:"Sept 24, 2016",slug:"dj-mountainous-live-birthrave-2016-bass-funk-dub",rating:8},{title:"Black Tusk",genres:"Trap & Dubstep",date:"August 2016",slug:"dj-mountainous-va-dubtrap",rating:9}]};t(a,"intense"),t(i,"calm"),e(i.mixes),e(a.mixes)});
//# sourceMappingURL=data:application/json;base64,
